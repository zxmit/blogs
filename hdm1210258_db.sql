/*
Navicat MySQL Data Transfer

Source Server         : Blogs
Source Server Version : 50148
Source Host           : hdm-121.hichina.com:3306
Source Database       : hdm1210258_db

Target Server Type    : MYSQL
Target Server Version : 50148
File Encoding         : 65001

Date: 2014-11-04 16:34:00
*/

SET FOREIGN_KEY_CHECKS=0;

-- ----------------------------
-- Table structure for blogs_admin
-- ----------------------------
DROP TABLE IF EXISTS `blogs_admin`;
CREATE TABLE `blogs_admin` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `admin` varchar(255) DEFAULT NULL,
  `pwd` varchar(32) DEFAULT NULL,
  `state` tinyint(4) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of blogs_admin
-- ----------------------------
INSERT INTO `blogs_admin` VALUES ('1', 'zhangxiaoming', 'e6477a723a60219877edcf7c0ce8ccad', '1');

-- ----------------------------
-- Table structure for blogs_email
-- ----------------------------
DROP TABLE IF EXISTS `blogs_email`;
CREATE TABLE `blogs_email` (
  `id` int(11) NOT NULL DEFAULT '0',
  `email` varchar(50) CHARACTER SET utf8 DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- ----------------------------
-- Records of blogs_email
-- ----------------------------
INSERT INTO `blogs_email` VALUES ('1', '1093776496@qq.com');

-- ----------------------------
-- Table structure for blogs_news
-- ----------------------------
DROP TABLE IF EXISTS `blogs_news`;
CREATE TABLE `blogs_news` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(255) DEFAULT NULL,
  `publisher` varchar(30) DEFAULT NULL,
  `content` text,
  `state` tinyint(4) DEFAULT '1',
  `type` smallint(6) DEFAULT NULL,
  `time` date DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=24 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of blogs_news
-- ----------------------------
INSERT INTO `blogs_news` VALUES ('1', '使用公众无线上网服务时，应作哪些防范措施？\r\n', '1', 'WiFi 网络的射频辐射量，远比手提流动电话为低。同时，根据世界卫生组织研究指出，暂时没有证据显示WiFi会对健康构成不良影响。\r\n\r\n', '0', '1', '2014-03-03');
INSERT INTO `blogs_news` VALUES ('2', '.使用WiFi会影响健康吗？\r\n', '1', 'WiFi 网络的射频辐射量，远比手提流动电话为低。同时，根据世界卫生组织研究指出，暂时没有证据显示WiFi会对健康构成不良影响。\r\n\r\n', '0', '1', '2014-02-24');
INSERT INTO `blogs_news` VALUES ('3', '使用「没加密」的WiFi热点时，应留意什么？\r\n', '1', '由于数据没有加密，于大气中传输的计算机数据，极容易被黑客窃取，故强烈建议不应使用这类WiFi网络。若非不得已，使用者应避免读取私人电邮、进行网上购买交易或使用网上银行服务等。\r\n\r\n7.使用公众无线上网服务时，应作', '0', '1', '2014-02-23');
INSERT INTO `blogs_news` VALUES ('4', 'WPS(WiFi Protected Setup)有什么安保上的漏洞？\r\n', '1', '近期WPS被发现为WiFi无线网络带来严重安保漏洞。原因是每个支持 WPS功能的网络装置均设有PIN号码，连接时只要在客户端输入服务器端的PIN号码，或是在服务器端输入客户端的PIN号码，客户端即可完成网络设定并加入 WiFi无线 网络。在 2011 年年尾，有安保专家发现可轻易取得PIN号码的方式，并成功连接经 WPA2 加密的WiFi网络。本应十分可靠的安保方式，就因为WPS功能而遭瓦解，故此建议大家使用完家中WiFi无线路由器 的 WPS功能后，应马上关闭该功能 。 \r\n\r\n', '0', '1', '2014-02-27');
INSERT INTO `blogs_news` VALUES ('5', '使用WiFi会影响健康吗？\r\n', '1', 'WiFi 网络的射频辐射量，远比手提流动电话为低。同时，根据世界卫生组织研究指出，暂时没有证据显示WiFi会对健康构成不良影响。\r\n\r\n', '0', '1', '2014-02-28');
INSERT INTO `blogs_news` VALUES ('6', '7.使用公众无线上网服务时，应作哪些防范措施？\r\n', '1', '用户应该确保计算机已经加设防火墙，以及安装防毒、防间谍程序等。同时，应留意上述防护设施必需时刻保持正常使用状态，以及替定义档案定期进行更新。\r\n\r\n', '0', '2', '2014-01-27');
INSERT INTO `blogs_news` VALUES ('7', '使用「没加密」的WiFi热点时，应留意什么？\r\n', '1', '由于数据没有加密，于大气中传输的计算机数据，极容易被黑客窃取，故强烈建议不应使用这类WiFi网络。若非不得已，使用者应避免读取私人电邮、进行网上购买交易或使用网上银行服务等。\r\n\r\n', '0', '2', '2014-02-18');
INSERT INTO `blogs_news` VALUES ('8', 'WPS(WiFi Protected Setup)有什么安保上的漏洞？\r\n', '1', '近期WPS被发现为WiFi无线网络带来严重安保漏洞。原因是每个支持 WPS功能的网络装置均设有PIN号码，连接时只要在客户端输入服务器端的PIN号码，或是在服务器端输入客户端的PIN号码，客户端即可完成网络设定并加入 WiFi无线 网络。在 2011 年年尾，有安保专家发现可轻易取得PIN号码的方式，并成功连接经 WPA2 加密的WiFi网络。本应十分可靠的安保方式，就因为WPS功能而遭瓦解，故此建议大家使用完家中WiFi无线路由器 的 WPS功能后，应马上关闭该功能 。 \r\n\r\n', '0', '2', '2014-03-10');
INSERT INTO `blogs_news` VALUES ('9', '如何确保数据在WiFi网络传送安全？', '1', '为确保数据经WiFi传递时不会被盗取，使用者必需为网络进行加密程序，现时常见的标准有 WEP、 WPA及 WPA2 等。只有获授权的WiFi客户端，输入加密密钥后，才可以使用WiFi网络上的资源。\r\n\r\n', '0', '3', '2014-02-26');
INSERT INTO `blogs_news` VALUES ('10', '如何避免流动装置由WiFi自动转换至收费无线网络?\r\n', '1', '用户应该时刻留意使用中的流动数据服务状态。此外，建议用户可关掉流动装置本身的 GPRS、3G或 3.5G(HSPDA)上网功能，并关掉网络自动切换功能，避免在不在意的情况下被无线网络服务供货商收取费用。\r\n\r\n', '0', '3', '2014-02-16');
INSERT INTO `blogs_news` VALUES ('11', 'WiFi连接会否自动转换至其他收费无线网络?\r\n', '1', '会的。当WiFi无线讯号太弱而到达某一个水平时，一些流动装置为着替用户提供无间断式互联网连接服务，自动选择可使用的流动数据服务，例如︰GPRS、3G、3.5G(HSPDA)，或其他服务供货商的WiFi服务。另外，有部分流动装置如侦测到有多于一个WiFi或流动数据服务可使用时，会自行连接上最强讯号的服务。\r\n\r\n', '0', '3', '2014-02-20');
INSERT INTO `blogs_news` VALUES ('12', 'Struts基础知识小结', '1', '<p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span>struts</span><span style=\\\"font-family:宋体;\\\">作用：请求与显示分开，</span><span>struts2</span><span style=\\\"font-family:宋体;\\\">为一个</span><span>MVC</span><span style=\\\"font-family:宋体;\\\">框架</span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span>MCV</span><span style=\\\"font-family:宋体;\\\">思想：它的三个基本部分是</span><span>Model</span><span style=\\\"font-family:宋体;\\\">（模型）、</span><span>View</span><span style=\\\"font-family:宋体;\\\">（视图）、</span><span>Control</span><span style=\\\"font-family:宋体;\\\">（控制器），这三个部分以最少的耦合性协同工作，从而提高应用的可扩展性与可维护性。</span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span> </span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span>Struts2</span><span style=\\\"font-family:宋体;\\\">框架的大致流程：</span></p><blockquote><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"margin-left:18.0pt;text-indent:-18.0pt;\\\"><span>1.<span style=\\\"\\\\&quot;font-size:7pt;font-family:\\\\\\\'Times\\\" new=\\\"\\\" roman\\\\\\\';\\\\\\\"=\\\"\\\"> </span></span><span style=\\\"font-family:宋体;\\\">客户端提交一个</span><span> HttpServletRequest </span><span style=\\\"font-family:宋体;\\\">请求</span><span>(.action </span><span style=\\\"font-family:宋体;\\\">或</span><span> JSP </span><span style=\\\"font-family:宋体;\\\">页面</span><span>)</span></p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"margin-left:18.0pt;text-indent:-18.0pt;\\\"><span>2.<span style=\\\"\\\\&quot;font-size:7pt;font-family:\\\\\\\'Times\\\" new=\\\"\\\" roman\\\\\\\';\\\\\\\"=\\\"\\\"> </span></span><span style=\\\"font-family:宋体;\\\">请求被提交到一个</span><span> Filter </span><span style=\\\"font-family:宋体;\\\">过滤器</span><span>StrutsPrepareAndExecuteFilter</span><span style=\\\"font-family:宋体;\\\">进行处理</span></p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"margin-left:18.0pt;text-indent:-18.0pt;\\\"><span>3.<span style=\\\"\\\\&quot;font-size:7pt;font-family:\\\\\\\'Times\\\" new=\\\"\\\" roman\\\\\\\';\\\\\\\"=\\\"\\\"> </span></span><span>Struts</span><span style=\\\"font-family:宋体;\\\">调用自己默认的一系列拦截器，如</span><span>exception</span><span style=\\\"font-family:宋体;\\\">、</span><span>alias</span><span style=\\\"font-family:宋体;\\\">、</span><span>servletConfig</span><span style=\\\"font-family:宋体;\\\">等</span></p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"margin-left:18.0pt;text-indent:-18.0pt;\\\"><span>4.<span style=\\\"\\\\&quot;font-size:7pt;font-family:\\\\\\\'Times\\\" new=\\\"\\\" roman\\\\\\\';\\\\\\\"=\\\"\\\"> </span></span><span style=\\\"font-family:宋体;\\\">回调</span><span>Action</span><span style=\\\"font-family:宋体;\\\">的</span><span>execute</span><span style=\\\"font-family:宋体;\\\">方法，该</span><span>execute</span><span style=\\\"font-family:宋体;\\\">方法首先获得用户请求参数然后执行数据操作</span></p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"margin-left:18.0pt;text-indent:-18.0pt;\\\"><span>5.<span style=\\\"\\\\&quot;font-size:7pt;font-family:\\\\\\\'Times\\\" new=\\\"\\\" roman\\\\\\\';\\\\\\\"=\\\"\\\"> </span></span><span>Action</span><span style=\\\"font-family:宋体;\\\">的</span><span>execute</span><span style=\\\"font-family:宋体;\\\">方法执行的结果存入</span><span>stack\nContext </span><span style=\\\"font-family:宋体;\\\">中，返回一个字符串，</span><span>StrutsPrepareAndExecuteFilter</span><span style=\\\"font-family:宋体;\\\">根据返回的字符串跳转到指定的页面。</span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span style=\\\"font-family:宋体;\\\">配置文件中</span><span>package</span><span style=\\\"font-family:宋体;\\\">作用：防止重名的问题</span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span>namespace=</span><span style=\\\"font-family:宋体;\\\">“</span><span>/</span><span style=\\\"font-family:宋体;\\\">”来制定根命名空间</span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span>namespace</span><span style=\\\"font-family:宋体;\\\">作用：以“</span><span>/</span><span style=\\\"font-family:宋体;\\\">”开头，对应</span><span>action</span><span style=\\\"font-family:宋体;\\\">的访问路径，</span></p></blockquote><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span> </span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span>namespace</span><span style=\\\"font-family:宋体;\\\">为空（“”）时的意思：表示全局的访问路径，先找对应</span><span>namespace</span><span style=\\\"font-family:宋体;\\\">，如果找不到，找</span><span>namespace</span><span style=\\\"font-family:宋体;\\\">为空的那个</span><span>namespace</span><span style=\\\"font-family:宋体;\\\">，在该</span><span>namespace</span><span style=\\\"font-family:宋体;\\\">下找对应的</span><span>action</span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span> </span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span>Struts</span><span style=\\\"font-family:宋体;\\\">中的</span><span>DMI</span><span style=\\\"font-family:宋体;\\\">（</span><span>Dynamic\nMethod Invocation</span><span style=\\\"font-family:宋体;\\\">）</span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span style=\\\"font-family:宋体;\\\">动态方法调用指可以用</span><span>action!xxx </span><span style=\\\"font-family:宋体;\\\">来动态的调用不同的方法</span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span style=\\\"font-family:宋体;\\\">（了解非动态的方法调用即</span><span>action</span><span style=\\\"font-family:宋体;\\\">标签中有</span><span>method</span><span style=\\\"font-family:宋体;\\\">元素）</span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span> </span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span>Struts</span><span style=\\\"font-family:宋体;\\\">配置文件中动态匹配的原则，如何使用</span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span> </span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span> </span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span> </span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span> </span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span>Struts</span><span style=\\\"font-family:宋体;\\\">传值接受参数：</span></p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"margin-left:18.0pt;text-indent:-18.0pt;\\\"><span>1.<span style=\\\"\\\\&quot;font-size:7pt;font-family:\\\\\\\'Times\\\" new=\\\"\\\" roman\\\\\\\';\\\\\\\"=\\\"\\\"> </span></span><span style=\\\"font-family:宋体;\\\">直接传属性</span></p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"margin-left:18.0pt;text-indent:-18.0pt;\\\"><span>2.<span style=\\\"\\\\&quot;font-size:7pt;font-family:\\\\\\\'Times\\\" new=\\\"\\\" roman\\\\\\\';\\\\\\\"=\\\"\\\"> </span></span><span style=\\\"font-family:宋体;\\\">创建一个</span><span>Model</span><span style=\\\"font-family:宋体;\\\">对象，对象中含有属性，传值给</span><span>Model</span><span style=\\\"font-family:宋体;\\\">对象</span></p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"margin-left:18.0pt;text-indent:-18.0pt;\\\"><span>3.<span style=\\\"\\\\&quot;font-size:7pt;font-family:\\\\\\\'Times\\\" new=\\\"\\\" roman\\\\\\\';\\\\\\\"=\\\"\\\"> </span></span><span style=\\\"font-family:宋体;\\\">实现</span><span>ModelDriven</span><span style=\\\"font-family:宋体;\\\">接口来接收参数（不常用）</span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span> </span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span style=\\\"font-family:宋体;\\\">中文乱码，在</span><span>Struts</span><span style=\\\"font-family:宋体;\\\">中配置，或者手动添加过滤器</span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span> </span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span style=\\\"font-family:宋体;\\\">简单的数据校验</span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span> </span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span style=\\\"font-family:宋体;\\\">活用</span><span>debug</span><span style=\\\"font-family:宋体;\\\">标签，并理解其中内容</span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span> </span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span>action</span><span style=\\\"font-family:宋体;\\\">向</span><span>web</span><span style=\\\"font-family:宋体;\\\">页面传值</span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span style=\\\"font-family:宋体;\\\">传值需要知道三个对象</span><span>request</span><span style=\\\"font-family:宋体;\\\">、</span><span>session</span><span style=\\\"font-family:宋体;\\\">、</span><span>application</span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span style=\\\"font-family:宋体;\\\">方法</span><span>1</span><span style=\\\"font-family:宋体;\\\">：</span><span>ActionContext.getContext().get(“request”);</span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span style=\\\"font-family:宋体;\\\">方法</span><span>2</span><span style=\\\"font-family:宋体;\\\">：实现</span><span>RequestAware</span><span style=\\\"font-family:宋体;\\\">、</span><span>SessionAware</span><span style=\\\"font-family:宋体;\\\">、</span><span>ApplicationAware</span><span style=\\\"font-family:宋体;\\\">接口</span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span> </span><span style=\\\"font-family:宋体;\\\">使用了</span><span>DI(dependency\ninjection)</span><span style=\\\"font-family:宋体;\\\">依赖注入</span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\" style=\\\"margin-left:21.0pt;text-indent:21.0pt;\\\"><span>IOC</span><span style=\\\"font-family:宋体;\\\">（控制反转）</span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span style=\\\"font-family:宋体;\\\">方法</span><span>3</span><span style=\\\"font-family:宋体;\\\">：</span><span>ServletActionContext.getRequest();</span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span style=\\\"font-family:宋体;\\\">方法</span><span>4</span><span style=\\\"font-family:宋体;\\\">：实现</span><span>ServletRequestAware</span><span style=\\\"font-family:宋体;\\\">接口，并实现</span><span>set...</span><span style=\\\"font-family:宋体;\\\">方法</span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span style=\\\"font-family:宋体;\\\">方法</span><span>1 2 </span><span style=\\\"font-family:宋体;\\\">得到</span><span>Map</span><span style=\\\"font-family:宋体;\\\">类型，方法</span><span>3</span><span style=\\\"font-family:宋体;\\\">得到原始的</span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span> </span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span>struts2</span><span style=\\\"font-family:宋体;\\\">热部署支持</span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span></span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span> </span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span> </span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span>struts2 &nbsp;&nbsp; xml</span><span style=\\\"font-family:宋体;\\\">配置文件中</span><span>include</span><span style=\\\"font-family:宋体;\\\">标签</span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span> </span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span>struts2 &nbsp;&nbsp; xml</span><span style=\\\"font-family:宋体;\\\">配置文件中</span><span>default-action-ref</span><span style=\\\"font-family:宋体;\\\">标签</span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span> </span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span>struts2&nbsp;&nbsp;&nbsp;&nbsp; xml</span><span style=\\\"font-family:宋体;\\\">配置文件</span><span>Result</span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span> Result</span><span style=\\\"font-family:宋体;\\\">类型（</span><span>type</span><span style=\\\"font-family:宋体;\\\">）：</span><span>dispatcher</span><span style=\\\"font-family:宋体;\\\">、</span><span>redirect</span><span style=\\\"font-family:宋体;\\\">、</span><span>chain</span><span style=\\\"font-family:宋体;\\\">、</span><span>redirectAction</span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span> </span><span style=\\\"font-family:宋体;\\\">默认</span><span>dispatcher</span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span> redirect</span><span style=\\\"font-family:宋体;\\\">：客户端跳转</span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span> chain</span><span style=\\\"font-family:宋体;\\\">：用</span><span>forward</span><span style=\\\"font-family:宋体;\\\">方式访问</span><span>action</span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span> redirectAction</span><span style=\\\"font-family:宋体;\\\">：跳转到</span><span>action</span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span style=\\\"font-family:宋体;\\\">服务器端跳转</span><span>dispatcher</span><span style=\\\"font-family:宋体;\\\">服务器内部跳转</span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span style=\\\"font-family:宋体;\\\">客户端跳转</span><span>redirect</span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span style=\\\"font-family:宋体;\\\">一次</span><span>request</span><span style=\\\"font-family:宋体;\\\">共享一个值栈，也就是说</span><span>forward</span><span style=\\\"font-family:宋体;\\\">跳转共享一个值栈，</span><span>redirect</span><span style=\\\"font-family:宋体;\\\">需要重新传值</span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span>GlobleResult</span><span style=\\\"font-family:宋体;\\\">配置</span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span></span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span> /main.jsp</span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span></span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span> </span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span>package</span><span style=\\\"font-family:宋体;\\\">标签中的</span><span>extends</span><span style=\\\"font-family:宋体;\\\">元素的作用：从另外一个</span><span>package</span><span style=\\\"font-family:宋体;\\\">继承</span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span> </span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span>result</span><span style=\\\"font-family:宋体;\\\">标签，动态结果配置</span><span>${r}</span><span style=\\\"font-family:宋体;\\\">，需要在</span><span>action</span><span style=\\\"font-family:宋体;\\\">中配置</span><span>r</span><span style=\\\"font-family:宋体;\\\">属性，并设置</span><span>set</span><span style=\\\"font-family:宋体;\\\">、</span><span>get</span><span style=\\\"font-family:宋体;\\\">方法</span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span> </span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span>/user_success.jsp?t=${r}</span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span style=\\\"font-family:宋体;\\\">页面接收数据</span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span></span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span> </span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span> </span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span> </span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span>OGNL</span></p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"margin-left:18.0pt;text-indent:-18.0pt;\\\"><span>1.<span style=\\\"\\\\&quot;font-size:7pt;font-family:\\\\\\\'Times\\\" new=\\\"\\\" roman\\\\\\\';\\\\\\\"=\\\"\\\"> </span></span><span style=\\\"font-family:宋体;\\\">直接访问值栈里的变量，</span></p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"margin-left:18.0pt;text-indent:-18.0pt;\\\"><span>2.<span style=\\\"\\\\&quot;font-size:7pt;font-family:\\\\\\\'Times\\\" new=\\\"\\\" roman\\\\\\\';\\\\\\\"=\\\"\\\"> </span></span><span>user.xxx</span><span style=\\\"font-family:宋体;\\\">只有传值才会构造，想初始化</span><span>domain\nmodel</span><span style=\\\"font-family:宋体;\\\">，可以自己</span><span>new</span><span style=\\\"font-family:宋体;\\\">，也可以传参数值，但需要有默认的构造方法（参数值为空）</span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\" style=\\\"margin-left:18.0pt;\\\"><span style=\\\"font-family:宋体;\\\">访问值栈中的普通方法</span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\" style=\\\"margin-left:18.0pt;\\\"><span style=\\\"font-family:宋体;\\\">访问值栈中</span><span>action</span><span style=\\\"font-family:宋体;\\\">的普通方法</span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\" style=\\\"margin-left:18.0pt;\\\"><span style=\\\"font-family:宋体;\\\">访问静态方法</span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\" style=\\\"margin-left:18.0pt;\\\"><span style=\\\"font-family:宋体;\\\">访问静态属性</span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\" style=\\\"margin-left:18.0pt;\\\"><span style=\\\"font-family:宋体;\\\">访问</span><span>Math</span><span style=\\\"font-family:宋体;\\\">类的静态方法</span><span></span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\" style=\\\"margin-left:18.0pt;\\\"><span style=\\\"font-family:宋体;\\\">访问普通类的构造方法</span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span> </span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span> </span><span style=\\\"font-family:宋体;\\\">访问集合</span></p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"margin-left:42.0pt;text-indent:-21.0pt;\\\"><span style=\\\"font-family:Wingdings;\\\">l<span style=\\\"\\\\&quot;font-size:7pt;font-family:\\\\\\\'Times\\\" new=\\\"\\\" roman\\\\\\\';\\\\\\\"=\\\"\\\"> </span></span><span style=\\\"font-family:宋体;\\\">访问</span><span>List</span><span style=\\\"font-family:宋体;\\\">，</span></p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"margin-left:42.0pt;text-indent:0cm;\\\"><span style=\\\"font-family:宋体;\\\">访问</span><span>List</span><span style=\\\"font-family:宋体;\\\">中元素摸个属性的集合</span><span>users.{age}</span></p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"margin-left:42.0pt;text-indent:0cm;\\\"><span style=\\\"font-family:宋体;\\\">访问某个属性的集合中的特定值</span></p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"margin-left:42.0pt;text-indent:-21.0pt;\\\"><span style=\\\"font-family:Wingdings;\\\">l<span style=\\\"\\\\&quot;font-size:7pt;font-family:\\\\\\\'Times\\\" new=\\\"\\\" roman\\\\\\\';\\\\\\\"=\\\"\\\"> </span></span><span style=\\\"font-family:宋体;\\\">访问</span><span>Set</span></p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"margin-left:42.0pt;text-indent:-21.0pt;\\\"><span style=\\\"font-family:Wingdings;\\\">l<span style=\\\"\\\\&quot;font-size:7pt;font-family:\\\\\\\'Times\\\" new=\\\"\\\" roman\\\\\\\';\\\\\\\"=\\\"\\\"> </span></span><span style=\\\"font-family:宋体;\\\">访问</span><span>Map</span></p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"margin-left:42.0pt;text-indent:0cm;\\\"><span style=\\\"font-family:宋体;\\\">访问</span><span>Map</span><span style=\\\"font-family:宋体;\\\">中某个元素</span></p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"margin-left:42.0pt;text-indent:0cm;\\\"><span style=\\\"font-family:宋体;\\\">访问</span><span>Map</span><span style=\\\"font-family:宋体;\\\">中所有的</span><span>key</span></p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"margin-left:42.0pt;text-indent:0cm;\\\"><span style=\\\"font-family:宋体;\\\">访问</span><span>Map</span><span style=\\\"font-family:宋体;\\\">中所有的</span><span>value</span><span style=\\\"font-family:宋体;\\\">值</span></p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"margin-left:42.0pt;text-indent:0cm;\\\"><span style=\\\"font-family:宋体;\\\">访问容器的大小</span></p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"margin-left:42.0pt;text-indent:0cm;\\\"><span> </span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span> </span><span style=\\\"font-family:宋体;\\\">投影（过滤）</span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\" style=\\\"margin-left:21.0pt;\\\"><span>users.{?#this.age==1}.{age}&nbsp;&nbsp;&nbsp; this</span><span style=\\\"font-family:宋体;\\\">值循环过程中循环的那个对象，表达的意思是取出</span><span>users</span><span style=\\\"font-family:宋体;\\\">集合中</span><span>age</span><span style=\\\"font-family:宋体;\\\">为</span><span>1</span><span style=\\\"font-family:宋体;\\\">的那个对象的</span><span>age</span><span style=\\\"font-family:宋体;\\\">值</span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\" style=\\\"margin-left:21.0pt;\\\"><span>users.{^#this.age&gt;1}.{age}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; age</span><span style=\\\"font-family:宋体;\\\">大于</span><span>1</span><span style=\\\"font-family:宋体;\\\">的开头的那个对象的</span><span>age</span><span style=\\\"font-family:宋体;\\\">值</span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\" style=\\\"margin-left:21.0pt;\\\"><span>users.{^#this.age&lt;1}.{age} age</span><span style=\\\"font-family:宋体;\\\">大于</span><span>1</span><span style=\\\"font-family:宋体;\\\">的结尾的那个对象的</span><span>age</span><span style=\\\"font-family:宋体;\\\">值</span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\" style=\\\"margin-left:21.0pt;\\\"><span>users.{^#this.age&lt;1}.{age} == null </span><span style=\\\"font-family:宋体;\\\">判断是否等于空</span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\" style=\\\"margin-left:21.0pt;\\\"><span> </span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\" style=\\\"margin-left:21.0pt;\\\"><span style=\\\"font-family:宋体;\\\">直接用“</span><span>[]</span><span style=\\\"font-family:宋体;\\\">”访问元素</span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\" style=\\\"margin-left:21.0pt;\\\"><span>[0] </span><span style=\\\"font-family:宋体;\\\">表示从栈顶一直访问到栈底的</span><span>action</span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\" style=\\\"margin-left:21.0pt;\\\"><span>[0].username </span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\" style=\\\"margin-left:21.0pt;\\\"><span> </span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\" style=\\\"margin-left:21.0pt;\\\"><span> </span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\" style=\\\"margin-left:21.0pt;\\\"><span>Struts2</span><span style=\\\"font-family:宋体;\\\">标签</span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\" style=\\\"margin-left:21.0pt;\\\"><span>property</span></p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"margin-left:42.0pt;text-indent:-21.0pt;\\\"><span style=\\\"font-family:Wingdings;\\\">l<span style=\\\"\\\\&quot;font-size:7pt;font-family:\\\\\\\'Times\\\" new=\\\"\\\" roman\\\\\\\';\\\\\\\"=\\\"\\\"> </span></span><span style=\\\"font-family:宋体;\\\">取值为字符串</span><span>value=”’username’”</span></p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"margin-left:42.0pt;text-indent:-21.0pt;\\\"><span style=\\\"font-family:Wingdings;\\\">l<span style=\\\"\\\\&quot;font-size:7pt;font-family:\\\\\\\'Times\\\" new=\\\"\\\" roman\\\\\\\';\\\\\\\"=\\\"\\\"> </span></span><span style=\\\"font-family:宋体;\\\">设置默认值</span><span> <span style=\\\"font-family:宋体;\\\">管理员</span><span>” /&gt;</span></span></p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"margin-left:42.0pt;text-indent:-21.0pt;\\\"><span style=\\\"font-family:Wingdings;\\\">l<span style=\\\"\\\\&quot;font-size:7pt;font-family:\\\\\\\'Times\\\" new=\\\"\\\" roman\\\\\\\';\\\\\\\"=\\\"\\\"> </span></span><span style=\\\"font-family:宋体;\\\">设定</span><span>HTML&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;’” &nbsp;escape=”false” /&gt;</span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\" style=\\\"margin-left:21.0pt;\\\"><span> </span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\" style=\\\"margin-left:21.0pt;\\\"><span>set</span></p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"margin-left:42.0pt;text-indent:-21.0pt;\\\"><span style=\\\"font-family:Wingdings;\\\">l<span style=\\\"\\\\&quot;font-size:7pt;font-family:\\\\\\\'Times\\\" new=\\\"\\\" roman\\\\\\\';\\\\\\\"=\\\"\\\"> </span></span><span style=\\\"font-family:宋体;\\\">设定</span><span>adminName</span><span style=\\\"font-family:宋体;\\\">值（默认为</span><span>request</span><span style=\\\"font-family:宋体;\\\">和</span><span>ActionContext</span><span style=\\\"font-family:宋体;\\\">设值）</span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\" style=\\\"margin-left:21.0pt;text-indent:21.0pt;\\\"><span></span></p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"margin-left:42.0pt;text-indent:-21.0pt;\\\"><span style=\\\"font-family:Wingdings;\\\">l<span style=\\\"\\\\&quot;font-size:7pt;font-family:\\\\\\\'Times\\\" new=\\\"\\\" roman\\\\\\\';\\\\\\\"=\\\"\\\"> </span></span><span style=\\\"font-family:宋体;\\\">设定范围</span></p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"margin-left:42.0pt;text-indent:0cm;\\\"><span></span></p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"margin-left:42.0pt;text-indent:0cm;\\\"><span>&lt;%=pageContext.getAttrbiute(“adminPassword”) %&gt;</span></p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"margin-left:42.0pt;text-indent:0cm;\\\"><span> </span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\" style=\\\"margin-left:21.0pt;\\\"><span>bean</span></p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"margin-left:42.0pt;text-indent:-21.0pt;\\\"><span style=\\\"font-family:Wingdings;\\\">l<span style=\\\"\\\\&quot;font-size:7pt;font-family:\\\\\\\'Times\\\" new=\\\"\\\" roman\\\\\\\';\\\\\\\"=\\\"\\\"> </span></span><span style=\\\"font-family:宋体;\\\">定义</span><span>bean</span><span style=\\\"font-family:宋体;\\\">并使用</span><span>param</span><span style=\\\"font-family:宋体;\\\">来设值新的属性值</span></p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"margin-left:42.0pt;text-indent:0cm;\\\"><span></span></p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"margin-left:42.0pt;text-indent:0cm;\\\"><span> </span></p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"margin-left:42.0pt;text-indent:0cm;\\\"><span></span></p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"margin-left:42.0pt;text-indent:0cm;\\\"><span style=\\\"font-family:宋体;\\\">如果没有</span><span>var</span><span style=\\\"font-family:宋体;\\\">，只能在</span><span>bean</span><span style=\\\"font-family:宋体;\\\">标签访问属性</span></p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"margin-left:42.0pt;text-indent:-21.0pt;\\\"><span style=\\\"font-family:Wingdings;\\\">l<span style=\\\"\\\\&quot;font-size:7pt;font-family:\\\\\\\'Times\\\" new=\\\"\\\" roman\\\\\\\';\\\\\\\"=\\\"\\\"> </span></span><span></span></p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"margin-left:42.0pt;text-indent:0cm;\\\"><span> </span></p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"margin-left:42.0pt;text-indent:0cm;\\\"><span></span></p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"margin-left:42.0pt;text-indent:0cm;\\\"><span style=\\\"font-family:宋体;\\\">设值</span><span>var</span><span style=\\\"font-family:宋体;\\\">值后可以通过</span><span>var</span><span style=\\\"font-family:宋体;\\\">值访问</span></p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"margin-left:42.0pt;text-indent:0cm;\\\"><span></span></p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"margin-left:42.0pt;text-indent:0cm;\\\"><span> </span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span> include</span></p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"margin-left:42.0pt;text-indent:-21.0pt;\\\"><span style=\\\"font-family:Wingdings;\\\">l<span style=\\\"\\\\&quot;font-size:7pt;font-family:\\\\\\\'Times\\\" new=\\\"\\\" roman\\\\\\\';\\\\\\\"=\\\"\\\"> </span></span><span></span></p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"margin-left:42.0pt;text-indent:0cm;\\\"><span></span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span> </span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span> $#%</span><span style=\\\"font-family:宋体;\\\">的区别</span></p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"margin-left:42.0pt;text-indent:-21.0pt;\\\"><span style=\\\"font-family:Wingdings;\\\">l<span style=\\\"\\\\&quot;font-size:7pt;font-family:\\\\\\\'Times\\\" new=\\\"\\\" roman\\\\\\\';\\\\\\\"=\\\"\\\"> </span></span><span>$</span><span style=\\\"font-family:宋体;\\\">用于</span><span>i18n</span><span style=\\\"font-family:宋体;\\\">和</span><span>struts</span><span style=\\\"font-family:宋体;\\\">配置文件中</span></p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"margin-left:42.0pt;text-indent:-21.0pt;\\\"><span style=\\\"font-family:Wingdings;\\\">l<span style=\\\"\\\\&quot;font-size:7pt;font-family:\\\\\\\'Times\\\" new=\\\"\\\" roman\\\\\\\';\\\\\\\"=\\\"\\\"> </span></span><span>#</span><span style=\\\"font-family:宋体;\\\">取得</span><span>ActionContext</span><span style=\\\"font-family:宋体;\\\">的值</span></p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"margin-left:42.0pt;text-indent:-21.0pt;\\\"><span style=\\\"font-family:Wingdings;\\\">l<span style=\\\"\\\\&quot;font-size:7pt;font-family:\\\\\\\'Times\\\" new=\\\"\\\" roman\\\\\\\';\\\\\\\"=\\\"\\\"> </span></span><span>%</span><span style=\\\"font-family:宋体;\\\">将原本的文本属性解析为</span><span>ognl</span><span style=\\\"font-family:宋体;\\\">，对于原本就是</span><span>ognl</span><span style=\\\"font-family:宋体;\\\">的忽略</span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span> </span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span>UI</span><span style=\\\"font-family:宋体;\\\">标签</span></p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"margin-left:42.0pt;text-indent:-21.0pt;\\\"><span>1.<span style=\\\"\\\\&quot;font-size:7pt;font-family:\\\\\\\'Times\\\" new=\\\"\\\" roman\\\\\\\';\\\\\\\"=\\\"\\\"> </span></span><span>theme</span></p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"margin-left:42.0pt;text-indent:0cm;\\\"><span>struts</span><span style=\\\"font-family:宋体;\\\">配置文件中的配置：</span><span></span></p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"margin-left:42.0pt;text-indent:0cm;\\\"><span style=\\\"font-family:宋体;\\\">默认主题为</span><span>xhtml</span></p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"margin-left:42.0pt;text-indent:-21.0pt;\\\"><span>2.<span style=\\\"\\\\&quot;font-size:7pt;font-family:\\\\\\\'Times\\\" new=\\\"\\\" roman\\\\\\\';\\\\\\\"=\\\"\\\"> </span></span><span> </span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span> </span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span style=\\\"font-family:宋体;\\\">声明式异常处理</span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span> </span><span style=\\\"font-family:宋体;\\\">在</span><span>struts.xml</span><span style=\\\"font-family:宋体;\\\">中的</span><span>Action</span><span style=\\\"font-family:宋体;\\\">标签中填写</span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span> <exception-mappingresult=”error” exception=\\\"”java.sql.SQLException”\\\"></exception-mappingresult=”error”></span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span> </span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span> </span><span style=\\\"font-family:宋体;\\\">并且在</span><span>action</span><span style=\\\"font-family:宋体;\\\">中的方法中抛出异常不使用</span><span>try-catch</span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span> </span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span> </span><span style=\\\"font-family:宋体;\\\">也可以设置的异常处理，然后其它的</span><span>package</span><span style=\\\"font-family:宋体;\\\">继承全局的那个包</span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span> </span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span>Struts</span><span style=\\\"font-family:宋体;\\\">拦截器以及源码解析</span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span> </span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span> </span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span> </span></p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"margin-left:18.0pt;text-indent:-18.0pt;\\\"><span>1.<span style=\\\"\\\\&quot;font-size:7pt;font-family:\\\\\\\'Times\\\" new=\\\"\\\" roman\\\\\\\';\\\\\\\"=\\\"\\\"> </span></span><span style=\\\"font-family:宋体;\\\">自定义拦截器</span></p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"margin-left:18.0pt;text-indent:0cm;\\\"><span style=\\\"font-family:宋体;\\\">已有拦截器框架</span> <span>acegi </span><span style=\\\"font-family:宋体;\\\">（</span><span>spring-security</span><span style=\\\"font-family:宋体;\\\">）</span></p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"margin-left:18.0pt;text-indent:-18.0pt;\\\"><span>2.<span style=\\\"\\\\&quot;font-size:7pt;font-family:\\\\\\\'Times\\\" new=\\\"\\\" roman\\\\\\\';\\\\\\\"=\\\"\\\"> </span></span><span style=\\\"font-family:宋体;\\\">使用</span><span>token</span><span style=\\\"font-family:宋体;\\\">拦截器控制重复提交（很少用）</span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\" style=\\\"margin-left:18.0pt;\\\"><span>token</span><span style=\\\"font-family:宋体;\\\">机制：访问表单页面时生成随机数字并存入</span><span>session</span><span style=\\\"font-family:宋体;\\\">中，提交数据时用该提交的数字与</span><span>session</span><span style=\\\"font-family:宋体;\\\">中的比较，如果相同就提交数据，提交完数据后删除该</span><span>session</span><span style=\\\"font-family:宋体;\\\">中的值</span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span> </span><span style=\\\"font-family:宋体;\\\">为什么很少用：表单提交后可以立即使用重定向，解决重复提交</span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span> </span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span style=\\\"font-family:宋体;\\\">软件工程</span></p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"margin-left:18.0pt;text-indent:-18.0pt;\\\"><span>1.<span style=\\\"\\\\&quot;font-size:7pt;font-family:\\\\\\\'Times\\\" new=\\\"\\\" roman\\\\\\\';\\\\\\\"=\\\"\\\"> </span></span><span style=\\\"font-family:宋体;\\\">瀑布式开发</span></p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"margin-left:18.0pt;text-indent:-18.0pt;\\\"><span>2.<span style=\\\"\\\\&quot;font-size:7pt;font-family:\\\\\\\'Times\\\" new=\\\"\\\" roman\\\\\\\';\\\\\\\"=\\\"\\\"> </span></span><span style=\\\"font-family:宋体;\\\">迭代式开发：鼓舞士气，利于需求的不断更新</span></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><span> </span></p>', '1', '3', '2014-08-16');
INSERT INTO `blogs_news` VALUES ('13', 'Java内存管理机制', '1', '<p class=\\\"MsoNormal\\\"><span></span></p><p class=\\\"MsoNormal\\\"><b>虚拟机栈：</b>线程私有的。<b><i>Java</i></b><b><i>方法执行</i></b>的内存模型，用于存储<b><i>局部变量表、操作数栈、动态链接、方法的出口</i></b>等。局部变量表存放了编译期可知的各种基本数据类型和对象的引用<span></span></p><p class=\\\"MsoNormal\\\"><b>本地方法栈：</b>它与虚拟机栈非常相似，只不过本地方法栈只为虚拟机使用到的<span>Native</span>方法服务<span></span></p><p class=\\\"MsoNormal\\\"><b>堆：<i>存放对象实例</i></b>，<span>java</span>堆是垃圾收集器管理的主要区域<span></span></p><p class=\\\"MsoNormal\\\"><b>方法区：</b>存储已被虚拟机加载的类信息、常量、静态变量、及时编译器编译后的代码<b><span></span></b></p><p class=\\\"MsoNormal\\\"><b>对象的创建过程：<span></span></b></p><p class=\\\"MsoListParagraph\\\" style=\\\"margin-left:36.0pt;text-indent:-36.0pt;\\\">（1）&nbsp; 检查该类是否已经加载，如果没有加载就需要先执行类相应的加载过程<span></span></p><p class=\\\"MsoListParagraph\\\" style=\\\"margin-left:36.0pt;text-indent:-36.0pt;\\\">（2）&nbsp; 类加载检查通过后，虚拟机将为新生的对象分配内存<span></span></p><p class=\\\"MsoListParagraph\\\" style=\\\"margin-left:36.0pt;text-indent:-36.0pt;\\\">（3）&nbsp; 虚拟机对对象进行必要的设置，例如这个对象是哪个类的实例、如何能找到类的元数据信息、对象的哈希吗、对象的<span>GC</span>分带年龄等信息<span></span></p><p class=\\\"MsoListParagraph\\\" style=\\\"margin-left:36.0pt;text-indent:-36.0pt;\\\">（4）&nbsp; 执行<span>&lt;init&gt;</span>方法，把对象按照程序员的意愿进行初始化<span></span></p>', '1', '1', '2014-08-16');
INSERT INTO `blogs_news` VALUES ('15', 'Java零星基础总结', '1', '<p class=\\\"MsoListParagraph\\\" style=\\\"margin-left:18.0pt;text-indent:-18.0pt;\\\">1.&nbsp; 若类的某个成员是基本数据类型，即使没有进行初始化，<span>Java</span>也会确保给定一个默认值，但这种初始化方法并不适用于局部变量<span></span></p><p class=\\\"MsoListParagraph\\\" style=\\\"margin-left:18.0pt;text-indent:-18.0pt;\\\">2.&nbsp; <b>方法名</b>和<b>参数列表</b>唯一地标识出了一个方法<span></span></p><p class=\\\"MsoListParagraph\\\" style=\\\"margin-left:18.0pt;text-indent:-18.0pt;\\\">3.&nbsp; 方法中的别名问题<span>,</span>主要涉及对象的地址分配，会有不同的反应<span></span></p><p class=\\\"MsoListParagraph\\\" align=\\\"left\\\" style=\\\"margin-left:21pt;text-indent:0cm;\\\">将一个对象传递给方法时，会产生别名问题：<span></span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\" style=\\\"text-indent:21pt;\\\"><b>class</b> Letter {</p><p class=\\\"MsoNormal\\\" align=\\\"left\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b>int</b> c;</p><p class=\\\"MsoNormal\\\" align=\\\"left\\\" style=\\\"text-indent:21pt;\\\">}</p><p class=\\\"MsoNormal\\\" align=\\\"left\\\" style=\\\"text-indent:21pt;\\\"><b>public</b> <b>class</b> test2\n{</p><p class=\\\"MsoNormal\\\" align=\\\"left\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b>int</b> a;</p><p class=\\\"MsoNormal\\\" align=\\\"left\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; String b;</p><p class=\\\"MsoNormal\\\" align=\\\"left\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b>public</b> <b>void</b> fun(<b>int</b> b) {</p><p class=\\\"MsoNormal\\\" align=\\\"left\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b = 9;</p><p class=\\\"MsoNormal\\\" align=\\\"left\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p><p class=\\\"MsoNormal\\\" align=\\\"left\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b>public</b> <b>void</b> funS(String b) {</p><p class=\\\"MsoNormal\\\" align=\\\"left\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b = <b>new</b> String(\\\":aa\\\");</p><p class=\\\"MsoNormal\\\" align=\\\"left\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p><p class=\\\"MsoNormal\\\" align=\\\"left\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b>public</b> <b>void</b> funL(Letter b) {</p><p class=\\\"MsoNormal\\\" align=\\\"left\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b.c\n= 9;</p><p class=\\\"MsoNormal\\\" align=\\\"left\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p><p class=\\\"MsoNormal\\\" align=\\\"left\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b>public</b> <b>static</b> <b>void</b> main(String[] args) {</p><p class=\\\"MsoNormal\\\" align=\\\"left\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; test2 t = <b>new</b> test2();</p><p class=\\\"MsoNormal\\\" align=\\\"left\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; t.a\n= 1;</p><p class=\\\"MsoNormal\\\" align=\\\"left\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; t.b\n= <b>new</b> String(\\\"111\\\");</p><p class=\\\"MsoNormal\\\" align=\\\"left\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Letter l = <b>new</b> Letter();</p><p class=\\\"MsoNormal\\\" align=\\\"left\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; l.c\n= 1;</p><p class=\\\"MsoNormal\\\" align=\\\"left\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.<i>out</i>.println(t.a\n+ \\\"&nbsp;\n\\\" + t.b\n+ \\\"&nbsp;&nbsp;\n\\\" + l.c);</p><p class=\\\"MsoNormal\\\" align=\\\"left\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; t.fun(t.a);</p><p class=\\\"MsoNormal\\\" align=\\\"left\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; t.funS(t.b);</p><p class=\\\"MsoNormal\\\" align=\\\"left\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; t.funL(l);</p><p class=\\\"MsoNormal\\\" align=\\\"left\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.<i>out</i>.println(t.a\n+ \\\"&nbsp;\n\\\" + t.b\n+ \\\"&nbsp;&nbsp;\n\\\" + l.c);</p><p class=\\\"MsoNormal\\\" align=\\\"left\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p><p class=\\\"MsoNormal\\\" align=\\\"left\\\" style=\\\"text-indent:21pt;\\\">}</p><p class=\\\"MsoListParagraph\\\" align=\\\"left\\\" style=\\\"margin-left:18pt;text-indent:-18pt;\\\">4.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n短路问题：boolean&nbsp; b =\ntest1(0) &amp;&amp; test2(1) &amp;&amp; test3(2)</p><p class=\\\"MsoListParagraph\\\" align=\\\"left\\\" style=\\\"margin-left:18pt;text-indent:-18pt;\\\">5.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n与break和continue有关的跳转机制：标签</p><p class=\\\"MsoListParagraph\\\" align=\\\"left\\\" style=\\\"margin-left:18pt;text-indent:0cm;\\\">例如：</p><p class=\\\"MsoListParagraph\\\" align=\\\"left\\\" style=\\\"margin-left:18pt;text-indent:0cm;\\\">label l1:</p><p class=\\\"MsoListParagraph\\\" align=\\\"left\\\" style=\\\"margin-left:18pt;text-indent:0cm;\\\">outer-iteration {</p><p class=\\\"MsoListParagraph\\\" align=\\\"left\\\" style=\\\"margin-left:18pt;text-indent:0cm;\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; inner-iteration\n{</p><p class=\\\"MsoListParagraph\\\" align=\\\"left\\\" style=\\\"margin-left:18pt;text-indent:0cm;\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //…</p><p class=\\\"MsoListParagraph\\\" align=\\\"left\\\" style=\\\"margin-left:18pt;text-indent:0cm;\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; break;</p><p class=\\\"MsoListParagraph\\\" align=\\\"left\\\" style=\\\"margin-left:18pt;text-indent:0cm;\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //…</p><p class=\\\"MsoListParagraph\\\" align=\\\"left\\\" style=\\\"margin-left:18pt;text-indent:0cm;\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; continue;</p><p class=\\\"MsoListParagraph\\\" align=\\\"left\\\" style=\\\"margin-left:18pt;text-indent:0cm;\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //…</p><p class=\\\"MsoListParagraph\\\" align=\\\"left\\\" style=\\\"margin-left:18pt;text-indent:0cm;\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; continue\nlabel l1;</p><p class=\\\"MsoListParagraph\\\" align=\\\"left\\\" style=\\\"margin-left:18pt;text-indent:0cm;\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //…</p><p class=\\\"MsoListParagraph\\\" align=\\\"left\\\" style=\\\"margin-left:18pt;text-indent:0cm;\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; break\nlabel l1;</p><p class=\\\"MsoListParagraph\\\" align=\\\"left\\\" style=\\\"margin-left:39pt;text-indent:3pt;\\\">}</p><p class=\\\"MsoListParagraph\\\" align=\\\"left\\\" style=\\\"margin-left:18pt;text-indent:0cm;\\\">}</p><p class=\\\"MsoListParagraph\\\" align=\\\"left\\\" style=\\\"margin-left:18pt;text-indent:-18pt;\\\">6.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; switch的选择因子必须是<b>int</b><b>或</b><b>char</b><b>或</b><b>enum</b></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\">&nbsp;</p><p class=\\\"MsoNormal\\\" align=\\\"left\\\"><b>初始化与清理</b><b></b></p><p class=\\\"MsoListParagraph\\\" align=\\\"left\\\" style=\\\"margin-left:18pt;text-indent:-18pt;\\\">1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 涉及基本类型的重载</p><p class=\\\"MsoListParagraph\\\" align=\\\"left\\\" style=\\\"margin-left:54pt;text-indent:-36pt;\\\">（1）&nbsp;&nbsp;&nbsp;\n基本类型能从一个“较小”的类型自动提升至一个“较大”的类型</p><p class=\\\"MsoListParagraph\\\" align=\\\"left\\\" style=\\\"margin-left:54pt;text-indent:-36pt;\\\">（2）&nbsp;&nbsp;&nbsp;\n如果未找到恰好的接受char参数的方法，就会把char直接提升至int型</p><p class=\\\"MsoListParagraph\\\" align=\\\"left\\\" style=\\\"margin-left:18pt;text-indent:-18pt;\\\">2.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this关键字只能在方法内部（非静态方法）使用，表示“调用方法的那个对象”</p><p class=\\\"MsoListParagraph\\\" align=\\\"left\\\" style=\\\"margin-left:18pt;text-indent:-18pt;\\\">3.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 在一个类的构造器（构造方法）中，可以用this调用另一个构造器，但却不能调用两个，而且必须将构造器至于最起始处（将this() 放在第一个位置）</p><p class=\\\"MsoListParagraph\\\" align=\\\"left\\\" style=\\\"margin-left:18pt;text-indent:-18pt;\\\">4.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b>初始化的顺序：</b>变量定义的先后顺序决定了初始化的顺序，及时变量定义散布于方法定义之间，他仍旧会在任何方法（包括构造器）被调用之前得到初始化<b></b></p><p class=\\\"MsoListParagraph\\\" align=\\\"left\\\" style=\\\"margin-left:18pt;text-indent:-18pt;\\\">5.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b>静态数据的初始化：</b><b></b></p><p class=\\\"MsoListParagraph\\\" align=\\\"left\\\" style=\\\"margin-left:54pt;text-indent:-36pt;\\\">（1）&nbsp;&nbsp;&nbsp;\nstatic关键字不能用于局部变量，也就是说方法内不能定义静态变量</p><p class=\\\"MsoListParagraph\\\" align=\\\"left\\\" style=\\\"margin-left:54pt;text-indent:-36pt;\\\">（2）&nbsp;&nbsp;&nbsp;\n初始化顺序是<b>先静态对象</b>，而<b>后是“非静态”对象、</b></p><p class=\\\"MsoListParagraph\\\" align=\\\"left\\\" style=\\\"margin-left:54pt;text-indent:-36pt;\\\">（3）&nbsp;&nbsp;&nbsp;\n&nbsp;构造器实际上也是静态方法</p><p class=\\\"MsoListParagraph\\\" align=\\\"left\\\" style=\\\"margin-left:18pt;text-indent:-18pt;\\\">6.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b>显式的静态初始化</b></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public class Spoon {</p><p class=\\\"MsoNormal\\\" align=\\\"left\\\" style=\\\"text-indent:21pt;\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; static int i;</p><p class=\\\"MsoNormal\\\" align=\\\"left\\\" style=\\\"text-indent:21pt;\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; static {</p><p class=\\\"MsoNormal\\\" align=\\\"left\\\" style=\\\"margin-left:21pt;text-indent:21pt;\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; i = 47;</p><p class=\\\"MsoNormal\\\" align=\\\"left\\\" style=\\\"margin-left:21pt;text-indent:21pt;\\\">}</p><p class=\\\"MsoNormal\\\" align=\\\"left\\\" style=\\\"margin-left:21pt;\\\">}</p><p class=\\\"MsoListParagraph\\\" align=\\\"left\\\" style=\\\"margin-left:18pt;text-indent:0cm;\\\"><b>这段代码只执行一次：</b>当首次生成这个类的对象时，或者首次访问哪儿类的静态数据成员时</p><p class=\\\"MsoListParagraph\\\" align=\\\"left\\\" style=\\\"margin-left:18pt;text-indent:-18pt;\\\">7.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b>非静态实例初始化</b><b></b></p><p class=\\\"MsoListParagraph\\\" align=\\\"left\\\" style=\\\"margin-left:18pt;text-indent:0cm;\\\">public class Spoon {</p><p class=\\\"MsoListParagraph\\\" align=\\\"left\\\" style=\\\"margin-left:18pt;text-indent:0cm;\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int i;&nbsp;\n&nbsp;&nbsp; int j;</p><p class=\\\"MsoListParagraph\\\" align=\\\"left\\\" style=\\\"margin-left:18pt;text-indent:0cm;\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p><p class=\\\"MsoListParagraph\\\" align=\\\"left\\\" style=\\\"margin-left:18pt;text-indent:0cm;\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; i\n= 47;</p><p class=\\\"MsoListParagraph\\\" align=\\\"left\\\" style=\\\"margin-left:18pt;text-indent:0cm;\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; j =\n43;</p><p class=\\\"MsoListParagraph\\\" align=\\\"left\\\" style=\\\"margin-left:39pt;text-indent:3pt;\\\">}</p><p class=\\\"MsoListParagraph\\\" align=\\\"left\\\" style=\\\"margin-left:18pt;text-indent:0cm;\\\">}</p><p class=\\\"MsoListParagraph\\\" align=\\\"left\\\" style=\\\"margin-left:18pt;text-indent:0cm;\\\"><b>无论调用了哪个构造器，实力初始化的部分都会执行</b><b></b></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\"><b>&nbsp;</b></p><p class=\\\"MsoListParagraph\\\" align=\\\"left\\\" style=\\\"margin-left:18pt;text-indent:-18pt;\\\">8.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b>静态方法不能访问非</b><b>static</b><b>成员，局部变量不能用</b><b>static</b><b>修饰</b></p>', '1', '1', '2014-08-16');
INSERT INTO `blogs_news` VALUES ('16', '排序算法', '1', '<p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><b>插入排序</b><b></b></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><b><i>伪代码：</i></b><b><i></i></b></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">INSERT-SOTR()</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">1&nbsp;&nbsp;&nbsp;&nbsp; for j = 2 to A.length</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">2&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; key\n= A[j]</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //Insert A[j] into the sorted\nsequence A[1…j - 1]</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">4&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; i\n= j-1</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">5&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; while\ni&gt;0 and A[i] &gt; key</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; A[i+1]\n= A[i]</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">7&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; i\n= i-1</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">8&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; A[i+1]\n= key</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><br></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">&nbsp;<img src=\\\"\\\\&quot;/public/kindeditor-4.1.10/attached/image/20140816/20140816134957_77103.jpg\\\\&quot;\\\" data-ke-src=\\\"\\\\&quot;/public/kindeditor-4.1.10/attached/image/20140816/20140816134957_77103.jpg\\\\&quot;\\\" alt=\\\"\\\\&quot;\\\\&quot;\\\"></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><b><i>时间复杂度分析：</i></b><b><i></i></b></p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"\\\\&quot;margin-left:36.0pt;text-indent:-36.0pt;\\\\&quot;\\\">（1）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 最佳情况</p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"\\\\&quot;margin-left:36.0pt;text-indent:0cm;\\\\&quot;\\\">输入的数组已经排好序</p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"\\\\&quot;margin-left:36.0pt;text-indent:0cm;\\\\&quot;\\\">O(n)</p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"\\\\&quot;margin-left:36.0pt;text-indent:-36.0pt;\\\\&quot;\\\">（2）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 最坏情况</p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"\\\\&quot;margin-left:36.0pt;text-indent:0cm;\\\\&quot;\\\">输入的数组反向排序</p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"\\\\&quot;margin-left:36.0pt;text-indent:0cm;\\\\&quot;\\\">O(<span style=\\\"\\\\&quot;font-family:&quot;\\\\&quot;\\\"></span><span style=\\\"\\\\&quot;font-family:&quot;\\\\&quot;\\\">n</span><span style=\\\"\\\\&quot;font-family:&quot;\\\\&quot;\\\">2</span>)</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><br></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><b><i>程序代码：</i></b><b><i></i></b></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">//获取数组</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">void\nget_seq(int *a, int n) {</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">&nbsp;&nbsp;&nbsp; for(int i=0; i<n; i++)=\\\"\\\" {<=\\\"\\\" p=\\\"\\\"></n;></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; scanf(\\\\\\\"%d\\\\\\\", &amp;a[i]);</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">&nbsp;&nbsp;&nbsp; }</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">}</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">//打印数组</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">void\nprint_seq(int *a, int n) {</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">&nbsp;&nbsp;&nbsp; for(int i=0; i<n; i++)=\\\"\\\" {<=\\\"\\\" p=\\\"\\\"></n;></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(\\\\\\\"%d \\\\\\\", a[i]);</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">&nbsp;&nbsp;&nbsp; }</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">&nbsp;&nbsp;&nbsp; printf(\\\\\\\"\\\\\\\\n\\\\\\\");</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">}</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">//插入排序</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">void\nInsert_sort(int *a, int n) {</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">&nbsp;&nbsp;&nbsp; int key, j;</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">&nbsp;&nbsp;&nbsp; for(int i=1; i<n; i++)=\\\"\\\" {<=\\\"\\\" p=\\\"\\\"></n;></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; key = a[i];</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; j = i-1;</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; while(j&gt;=0 &amp;&amp; a[j]&gt;key) {</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; a[j+1] = a[j];</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; j = j-1;</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; a[j+1] = key;</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">&nbsp;&nbsp;&nbsp; }</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">}</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><br></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">int\nmain() {</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">&nbsp;&nbsp;&nbsp; int a[99999], n;</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">&nbsp;&nbsp;&nbsp; while(scanf(\\\\\\\"%d\\\\\\\", &amp;n) != EOF)\n{</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; get_seq(a, n);</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Insert_sort(a, n);</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; print_seq(a, n);</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">&nbsp;&nbsp;&nbsp; }</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">&nbsp;&nbsp;&nbsp; return 0;</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">}</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><br></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><b>归并排序</b><b></b></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><b><i>伪代码：</i></b><b><i></i></b></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">//合并两个已排好序的数组</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">MERGE(A,\np, q, r)</p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"\\\\&quot;margin-left:21.0pt;text-indent:-21.0pt;\\\\&quot;\\\">1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\nn1 = q – p + 1</p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"\\\\&quot;margin-left:21.0pt;text-indent:-21.0pt;\\\\&quot;\\\">2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\nn2 = r – q</p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"\\\\&quot;margin-left:21.0pt;text-indent:-21.0pt;\\\\&quot;\\\">3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\nlet L[1…n1+1] and R[1…n2+1] be new array</p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"\\\\&quot;margin-left:21.0pt;text-indent:-21.0pt;\\\\&quot;\\\">4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\nfor i = 1 to n1</p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"\\\\&quot;margin-left:21.0pt;text-indent:-21.0pt;\\\\&quot;\\\">5&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; L[i] = A[p+i-1]</p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"\\\\&quot;margin-left:21.0pt;text-indent:-21.0pt;\\\\&quot;\\\">6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\nfor j = 1 to n2</p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"\\\\&quot;margin-left:21.0pt;text-indent:-21.0pt;\\\\&quot;\\\">7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; R[j] = A[q+j]</p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"\\\\&quot;margin-left:21.0pt;text-indent:-21.0pt;\\\\&quot;\\\">8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\nL[n1 + 1] = ∞</p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"\\\\&quot;margin-left:21.0pt;text-indent:-21.0pt;\\\\&quot;\\\">9&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\nR[n2 + 1] = ∞</p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"\\\\&quot;margin-left:21.0pt;text-indent:-21.0pt;\\\\&quot;\\\">10&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; i = 1</p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"\\\\&quot;margin-left:21.0pt;text-indent:-21.0pt;\\\\&quot;\\\">11&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; j = 1</p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"\\\\&quot;margin-left:21.0pt;text-indent:-21.0pt;\\\\&quot;\\\">12&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for k\n= p to r</p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"\\\\&quot;margin-left:21.0pt;text-indent:-21.0pt;\\\\&quot;\\\">13&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if\nL[i] &lt;= R[j]</p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"\\\\&quot;margin-left:21.0pt;text-indent:-21.0pt;\\\\&quot;\\\">14&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; A[k]\n= L[i]</p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"\\\\&quot;margin-left:21.0pt;text-indent:-21.0pt;\\\\&quot;\\\">15&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; i = i + 1</p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"\\\\&quot;margin-left:21.0pt;text-indent:-21.0pt;\\\\&quot;\\\">16&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else</p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"\\\\&quot;margin-left:21.0pt;text-indent:-21.0pt;\\\\&quot;\\\">17&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; A[k] = R[j]</p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"\\\\&quot;margin-left:21.0pt;text-indent:-21.0pt;\\\\&quot;\\\">18&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; j\n= j + 1</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><br></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><br></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><br></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">&nbsp;<img src=\\\"\\\\&quot;/public/kindeditor-4.1.10/attached/image/20140816/20140816135101_11370.jpg\\\\&quot;\\\" data-ke-src=\\\"\\\\&quot;/public/kindeditor-4.1.10/attached/image/20140816/20140816135101_11370.jpg\\\\&quot;\\\" alt=\\\"\\\\&quot;\\\\&quot;\\\"></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">现在我们可以把过程MERGE作为归并排序的一个子程序来用，排序子数组A[p…r]中的元素。若p\n&gt;= r，则盖子数组最多有一个元素，所以已经排好。否则，分解步骤简单地计算下一个下标q，将A[p…r]分成两个子数组A[p…q]和A[q+1…r]，前者包含n/2（取上整）个元素，后者包含n/2（取下整）个元素</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">MERGE-SORT(A,\np, r)</p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"\\\\&quot;margin-left:21.0pt;text-indent:-21.0pt;\\\\&quot;\\\">1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\nif p &lt; r</p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"\\\\&quot;margin-left:21.0pt;text-indent:-21.0pt;\\\\&quot;\\\">2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; q = (p+r)/2</p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"\\\\&quot;margin-left:21.0pt;text-indent:-21.0pt;\\\\&quot;\\\">3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MERGE-SORT(A, p, q+1)</p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"\\\\&quot;margin-left:21.0pt;text-indent:-21.0pt;\\\\&quot;\\\">4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MERGE-SORT(A, q+1, r)</p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" style=\\\"\\\\&quot;margin-left:21.0pt;text-indent:-21.0pt;\\\\&quot;\\\">5&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MERGE(A, p, q, r)</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><br></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><b><i>时间复杂度分析：</i></b><b><i></i></b></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">对于MERGE函数来说其时间复杂度位O(n)，又由于MERGE-SORT函数属于递归，递归的时间复杂度位O(lg\nn)，所以该排序算法的时间复杂度位O(nlg\nn);</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><br></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><b><i>程序代码：</i></b><b><i></i></b></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">void\nmerge(int *a, int p, int q, int r) {</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">&nbsp;&nbsp;&nbsp; int n1 = q-p+1;</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">&nbsp;&nbsp;&nbsp; int n2 = r-q;</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">&nbsp;&nbsp;&nbsp; int L[n1+1], R[n2+1];</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">&nbsp;&nbsp;&nbsp; for(int i=0; i<n1; i++)=\\\"\\\" {<=\\\"\\\" p=\\\"\\\"></n1;></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; L[i] = a[p+i];</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">&nbsp;&nbsp;&nbsp; }</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">&nbsp;&nbsp;&nbsp; for(int i=0; i<n2; i++)=\\\"\\\" {<=\\\"\\\" p=\\\"\\\"></n2;></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; R[i] = a[q+i+1];</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">&nbsp;&nbsp;&nbsp; }</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">&nbsp;&nbsp;&nbsp; L[n1] = 9999999;</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">&nbsp;&nbsp;&nbsp; R[n2] = 9999999;</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><br></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">&nbsp;&nbsp;&nbsp; int i=0, j=0;</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">&nbsp;&nbsp;&nbsp; for(int k=p; k&lt;=r; k++) {</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(L[i] &lt;= R[j]) {</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; a[k] = L[i];</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; i++;</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;}else {</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; a[k] = R[j];</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; j++;</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">&nbsp;&nbsp;&nbsp; }</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">}</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><br></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">void\nmerge_sort(int *a, int p, int r) {</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">&nbsp;&nbsp;&nbsp; if(p &lt; r) {</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int q = (p+r)/2;</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; merge_sort(a, p, q);</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; merge_sort(a, q+1, r);</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; merge(a, p, q, r);</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">&nbsp;&nbsp;&nbsp; }</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">}</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><br></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><br></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><br></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><br></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><br></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><br></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><b>堆排序</b><b></b></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><b>概念：</b><b></b></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><b> </b>(二叉)堆：是一个数组，它可以被看成一个近似的完全二叉树，树的根结点是A[1]，这样给定一个结点的下标，可以计算书它的父结点、左孩子和右孩子的下标：</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\" style=\\\"\\\\&quot;text-indent:21.0pt;\\\\&quot;\\\">PARENT(i)</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\" style=\\\"\\\\&quot;margin-left:21.0pt;text-indent:21.0pt;\\\\&quot;\\\">return\ni/2(取下整)</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; LEFT(i)</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return 2*1</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RIGHT(i)</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return 2*1</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><img src=\\\"\\\\&quot;/public/kindeditor-4.1.10/attached/image/20140816/20140816135142_66525.jpg\\\\&quot;\\\" data-ke-src=\\\"\\\\&quot;/public/kindeditor-4.1.10/attached/image/20140816/20140816135142_66525.jpg\\\\&quot;\\\" alt=\\\"\\\\&quot;\\\\&quot;\\\"></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\" align=\\\"\\\\&quot;right\\\\&quot;\\\" style=\\\"\\\\&quot;text-align:right;\\\\&quot;\\\"><br></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 最大堆：除根结点外所有结点i的值至多与其父结点一样大，既满足：</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\" align=\\\"\\\\&quot;center\\\\&quot;\\\" style=\\\"\\\\&quot;text-align:center;\\\\&quot;\\\">A[PARENT(i)]\n&gt;= A[i]</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 最小堆：除根结点外所有结点i的值不能大于其父结点，既满足：</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\" align=\\\"\\\\&quot;center\\\\&quot;\\\" style=\\\"\\\\&quot;text-align:center;\\\\&quot;\\\">A[PARENT(i)]\n&gt;= A[i]</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\" align=\\\"\\\\&quot;left\\\\&quot;\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 堆的高度：根节点到叶节点最长简单路径上边的数目，也就是根节点的高度，又因为一个包含n个元素的堆可以看做是一棵完全二叉树，那么该堆的高度应是lg n（取下整）</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\" align=\\\"\\\\&quot;left\\\\&quot;\\\"><br></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><b>堆的操作过程：</b><b></b></p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" align=\\\"\\\\&quot;left\\\\&quot;\\\" style=\\\"\\\\&quot;margin-left:36pt;text-indent:-36pt;\\\\&quot;\\\">（1）&nbsp;&nbsp;&nbsp;\nMAX-HEAPIFY过程：维护最大堆性质的关键，时间复杂度位O(lg\nn)</p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" align=\\\"\\\\&quot;left\\\\&quot;\\\" style=\\\"\\\\&quot;margin-left:36pt;text-indent:-36pt;\\\\&quot;\\\">（2）&nbsp;&nbsp;&nbsp;\nBULID-MAX-HEAPG过程：从无序的输入数组，构建为一个最大堆，具有线性时间复杂度</p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" align=\\\"\\\\&quot;left\\\\&quot;\\\" style=\\\"\\\\&quot;margin-left:36pt;text-indent:-36pt;\\\\&quot;\\\">（3）&nbsp;&nbsp;&nbsp;\nHEAPSORT过程：对一个数组进行原址排序，时间复杂度位O(lg\nn)</p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" align=\\\"\\\\&quot;left\\\\&quot;\\\" style=\\\"\\\\&quot;margin-left:36pt;text-indent:-36pt;\\\\&quot;\\\">（4）&nbsp;&nbsp;&nbsp;\nMAX-HEAP-INSERT、HEAP-EXTRACT-MAX、HEAP-INCREASE-KEY和HEAP-MAXIMUM过程，利用堆实现一个优先队列，时间复杂度是 O(lg\nn)</p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" align=\\\"\\\\&quot;left\\\\&quot;\\\" style=\\\"\\\\&quot;margin-left:36pt;text-indent:0cm;\\\\&quot;\\\"><br></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\" align=\\\"\\\\&quot;left\\\\&quot;\\\"><b>MAX-HEAPIFY</b><b>函数：用于维护最大堆的性质</b><b> </b></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\" align=\\\"\\\\&quot;left\\\\&quot;\\\">函数的输入为一个数组A和一个下标i，在调用MAX-HEAPIFY的时候，我们假定根节点位LEFT(i)和RIGHT(i)的二叉树都是最大堆。函数算法描述如下：</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\" align=\\\"\\\\&quot;left\\\\&quot;\\\"><br></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\" align=\\\"\\\\&quot;left\\\\&quot;\\\">MAX-HEAPIFY(A,\ni)</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">1 &nbsp;&nbsp;l = LEFT(i)</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\" align=\\\"\\\\&quot;left\\\\&quot;\\\">2 &nbsp;&nbsp;r = RIGHT(i)</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\" align=\\\"\\\\&quot;left\\\\&quot;\\\">3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if l&lt;=A.heap-size and A[l]&gt;A[i]</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\" align=\\\"\\\\&quot;left\\\\&quot;\\\">4&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; largest\n= l</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\" align=\\\"\\\\&quot;left\\\\&quot;\\\">5&nbsp;&nbsp;&nbsp;&nbsp; else largest = i</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\" align=\\\"\\\\&quot;left\\\\&quot;\\\">6&nbsp;&nbsp;&nbsp;&nbsp; if r&lt;=A.heap-size and A[r]&gt;A[largest]</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\" align=\\\"\\\\&quot;left\\\\&quot;\\\">7&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; largest\n= r</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\" align=\\\"\\\\&quot;left\\\\&quot;\\\">8&nbsp;&nbsp;&nbsp;&nbsp; if largest != i</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\" align=\\\"\\\\&quot;left\\\\&quot;\\\">9&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; exchange\nA[i] and A[largest]</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\" align=\\\"\\\\&quot;left\\\\&quot;\\\">10&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MAX-HEAPIFY(A,\nlargest)</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\" align=\\\"\\\\&quot;left\\\\&quot;\\\"><br></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\" align=\\\"\\\\&quot;left\\\\&quot;\\\"><br></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\" align=\\\"\\\\&quot;left\\\\&quot;\\\">&nbsp;<img src=\\\"\\\\&quot;/public/kindeditor-4.1.10/attached/image/20140816/20140816135226_23280.jpg\\\\&quot;\\\" data-ke-src=\\\"\\\\&quot;/public/kindeditor-4.1.10/attached/image/20140816/20140816135226_23280.jpg\\\\&quot;\\\" alt=\\\"\\\\&quot;\\\\&quot;\\\"></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\" align=\\\"\\\\&quot;left\\\\&quot;\\\"><b>BULID-MAX-HEAP</b><b>建堆</b><b></b></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\" align=\\\"\\\\&quot;left\\\\&quot;\\\">BULID-MAX-HEAP(A)</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\" align=\\\"\\\\&quot;left\\\\&quot;\\\">1&nbsp;&nbsp;&nbsp;&nbsp; A.heap-size = A.length</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\" align=\\\"\\\\&quot;left\\\\&quot;\\\">2<span> </span>for i = A.length/2(取下整) downto 1</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\" align=\\\"\\\\&quot;left\\\\&quot;\\\">3&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MAX-HEAPIFY(A,\ni)</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\" align=\\\"\\\\&quot;left\\\\&quot;\\\"><img src=\\\"\\\\&quot;/public/kindeditor-4.1.10/attached/image/20140816/20140816135253_17546.jpg\\\\&quot;\\\" data-ke-src=\\\"\\\\&quot;/public/kindeditor-4.1.10/attached/image/20140816/20140816135253_17546.jpg\\\\&quot;\\\" alt=\\\"\\\\&quot;\\\\&quot;\\\"></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\" align=\\\"\\\\&quot;left\\\\&quot;\\\"><b>堆排序：</b><b>HEAPSORT</b></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\" align=\\\"\\\\&quot;left\\\\&quot;\\\">HEAPSORT(A)</p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" align=\\\"\\\\&quot;left\\\\&quot;\\\" style=\\\"\\\\&quot;margin-left:21pt;text-indent:-21pt;\\\\&quot;\\\">1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\nBUILD-MAX-HEAP(A)</p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" align=\\\"\\\\&quot;left\\\\&quot;\\\" style=\\\"\\\\&quot;margin-left:21pt;text-indent:-21pt;\\\\&quot;\\\">2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\nfor i = A.length downto 2</p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" align=\\\"\\\\&quot;left\\\\&quot;\\\" style=\\\"\\\\&quot;margin-left:21pt;text-indent:-21pt;\\\\&quot;\\\">3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\nA.heap-size = A.heap-size-1</p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" align=\\\"\\\\&quot;left\\\\&quot;\\\" style=\\\"\\\\&quot;margin-left:21pt;text-indent:-21pt;\\\\&quot;\\\">4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\nMAX-HEAPIFY(A, 1)</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\" align=\\\"\\\\&quot;left\\\\&quot;\\\"><br></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\" align=\\\"\\\\&quot;left\\\\&quot;\\\"><b>快速排序</b><b></b></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\" align=\\\"\\\\&quot;left\\\\&quot;\\\">伪代码：</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\" align=\\\"\\\\&quot;left\\\\&quot;\\\">QUICKSORT(A, p,\nr)</p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" align=\\\"\\\\&quot;left\\\\&quot;\\\" style=\\\"\\\\&quot;margin-left:21pt;text-indent:-21pt;\\\\&quot;\\\">1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\nif p &lt; r</p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" align=\\\"\\\\&quot;left\\\\&quot;\\\" style=\\\"\\\\&quot;margin-left:21pt;text-indent:-21pt;\\\\&quot;\\\">2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; q = PARTION(A, p, r)</p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" align=\\\"\\\\&quot;left\\\\&quot;\\\" style=\\\"\\\\&quot;margin-left:21pt;text-indent:-21pt;\\\\&quot;\\\">3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; QUICKSORT(A, p, q-1)</p><p class=\\\"\\\\&quot;MsoListParagraph\\\\&quot;\\\" align=\\\"\\\\&quot;left\\\\&quot;\\\" style=\\\"\\\\&quot;margin-left:21pt;text-indent:-21pt;\\\\&quot;\\\">4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; QUICKSORT(A, p+1, r)</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\" align=\\\"\\\\&quot;left\\\\&quot;\\\"><b> </b></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\" align=\\\"\\\\&quot;left\\\\&quot;\\\">PARTION(A, p, r)</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\" align=\\\"\\\\&quot;left\\\\&quot;\\\">1&nbsp;&nbsp;&nbsp;&nbsp; x = A[r]</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\" align=\\\"\\\\&quot;left\\\\&quot;\\\">2&nbsp;&nbsp;&nbsp;&nbsp; i = p-1</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\" align=\\\"\\\\&quot;left\\\\&quot;\\\">3&nbsp;&nbsp;&nbsp;&nbsp; for j=p to r-1</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\" align=\\\"\\\\&quot;left\\\\&quot;\\\">4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if A[j] &lt;= x</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\" align=\\\"\\\\&quot;left\\\\&quot;\\\">5&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; i = i + 1</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\" align=\\\"\\\\&quot;left\\\\&quot;\\\">6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; exchange A[i] with A[j]</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\" align=\\\"\\\\&quot;left\\\\&quot;\\\">7&nbsp;&nbsp;&nbsp;&nbsp; exchange A[i+1] with A[r]</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\" align=\\\"\\\\&quot;left\\\\&quot;\\\">8&nbsp;&nbsp;&nbsp;&nbsp; return i+1</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\" align=\\\"\\\\&quot;left\\\\&quot;\\\">&nbsp;<img src=\\\"\\\\&quot;/public/kindeditor-4.1.10/attached/image/20140816/20140816135313_10228.jpg\\\\&quot;\\\" data-ke-src=\\\"\\\\&quot;/public/kindeditor-4.1.10/attached/image/20140816/20140816135313_10228.jpg\\\\&quot;\\\" alt=\\\"\\\\&quot;\\\\&quot;\\\"></p>', '1', '2', '2014-08-16');
INSERT INTO `blogs_news` VALUES ('18', 'CentOS搭建FTP服务器', '1', '<p class=\\\"MsoNormal\\\" align=\\\"left\\\">准备工作：安装软件<span>vmware workstation 10&nbsp; </span>安装虚拟机<span>CentOS 6.5 32</span>位<span></span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\"><span>&nbsp;</span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\" style=\\\"margin-left:0cm;text-indent:0cm;\\\"><!--[if !supportLists]--><b><span>1.</span></b><!--[endif]--><b>安装</b><b><span>FTP</span></b></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\" style=\\\"text-indent:21pt;\\\"><span>a.</span>如果联网情况下可以直接在线安装<span></span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\" style=\\\"margin-left:21pt;text-indent:21pt;\\\"><span>[root@zxmit\n/]# yum install vsftpd</span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\" style=\\\"text-indent:21pt;\\\"><span>b.</span>如果没有网络可以用<span>rpm</span>安装包安装<span></span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\" style=\\\"margin-left:21pt;text-indent:21pt;\\\">在<span>CentOS</span>系统光盘<span>1</span>中带有<span>FTP</span>的安装包具体步骤<span></span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\" style=\\\"margin-left:21pt;text-indent:21pt;\\\"><span>[root@zxmit\n/]# mount /dev/cdrom /tmp&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; --</span>挂载光盘到<span>/tmp </span>目录下<span></span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\" style=\\\"margin-left:21pt;text-indent:21pt;\\\"><span>[root@zxmit\n/]# cd /tmp&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\" style=\\\"margin-left:21pt;text-indent:21pt;\\\"><span>[root@zxmit\ntmp]# find -name vsftpd*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; --</span>查找安装包<span></span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\" style=\\\"margin-left:21pt;text-indent:21pt;\\\"><span>./Packages/vsftpd-2.2.2-11.el6_4.1.i686.rpm&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\" style=\\\"margin-left:21pt;text-indent:21pt;\\\"><span>[root@zxmit\ntmp]# rpm -vih /tmp/Packages/vsftpd-2.2.2-11.el6_4.1.i686.rpm&nbsp;&nbsp; --</span>安装<span></span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\" style=\\\"margin-left:21pt;text-indent:21pt;\\\"><span>&nbsp;</span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\"><b><span>2.FTP</span></b><b>启动相关</b><span></span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\" style=\\\"text-indent:21pt;\\\"><span>service vsftpd start&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; --</span>启动<span></span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\" style=\\\"text-indent:21pt;\\\"><span>service vsftpd restart&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; --</span>重启<span></span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\" style=\\\"text-indent:21pt;\\\"><span>service vsftpd stop&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; --</span>关闭<span></span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\"><span>&nbsp;</span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\" style=\\\"margin-left:0cm;text-indent:0cm;\\\"><!--[if !supportLists]--><b><span>3.</span></b><!--[endif]--><b><span>FTP</span></b><b>相关配置</b><b><span></span></b></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\" style=\\\"text-indent:21pt;\\\"><span>ftp</span>主要的配置文件是<span>vsftpd.conf</span>，其它一些文件都是根据这个文件来配置的<span></span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\" style=\\\"text-indent:21pt;\\\"><span>&nbsp;</span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\" style=\\\"text-indent:21pt;\\\"><b><i><span>vsftpd.conf</span></i></b><b><i>的默认配置如下</i></b><b><span>:</span></b></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\" style=\\\"text-indent:21pt;\\\"><span># 1.</span>与匿名用户有关的设置<span></span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\" style=\\\"text-indent:21pt;\\\"><span>anonymous_enable=YES&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #</span>允许匿名访问<span></span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\" style=\\\"text-indent:21pt;\\\"><span>&nbsp;</span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\" style=\\\"text-indent:21pt;\\\"><span>&nbsp;</span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\" style=\\\"text-indent:21pt;\\\"><span># 2.</span>与实体用户有关的设置<span></span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\" style=\\\"text-indent:21pt;\\\"><span>local_enable=YES&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #</span>允许实体用户登陆<span>ps.</span>就是、<span>/etc/passwd</span>中的用户<span></span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\" style=\\\"text-indent:21pt;\\\"><span>write_enable=YES&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #</span>允许用户上传数据<span></span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\" style=\\\"text-indent:21pt;\\\"><span>local_umask=022&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #</span>建立新的目录（<span>755</span>）文件（<span>644</span>）的权限值<span></span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\" style=\\\"text-indent:21pt;\\\"><span>&nbsp;</span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\" style=\\\"text-indent:21pt;\\\"><span># 3.</span>与服务器环境有关的设置<span></span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\" style=\\\"text-indent:21pt;\\\"><span>dirmessage_enable=YES&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #</span>显示目录下<span>.message</span>中的内容（如果有该文件）<span></span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\" style=\\\"text-indent:21pt;\\\"><span>xferlog_enable=YES&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #</span>启动日志记录，记录在<span>/var/log/xferlog</span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\" style=\\\"text-indent:21pt;\\\"><span>connect_from_port_20=YES&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #</span>支持主动连接功能<span></span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\" style=\\\"text-indent:21pt;\\\"><span>xferlog_std_format=YES&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #</span>支持<span>WuFTP</span>的日志文件格式<span></span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\" style=\\\"text-indent:21pt;\\\"><span>userlist_enable=YES&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #</span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\" style=\\\"text-indent:21pt;\\\"><span>&nbsp;</span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\" style=\\\"text-indent:21pt;\\\"><span>listen=YES&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #</span>使用<span>stand alone </span>方式启动<span>FTP</span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\" style=\\\"text-indent:21pt;\\\"><span>pam_service_name=YES&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #</span>支持<span>PAM</span>模块儿的管理<span></span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\" style=\\\"text-indent:21pt;\\\"><span>tcp_wrappers=YES&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #</span>支持<span>TCP Wrappers </span>的防火墙机制<span></span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\" style=\\\"text-indent:21pt;\\\"><span>&nbsp;</span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\" style=\\\"text-indent:21pt;\\\">下面网址对<span>stand alone</span>启动方式有详细地介绍<span></span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\" style=\\\"margin-left:21pt;text-indent:21pt;\\\"><span><a href=\\\"http://blog.csdn.net/firefoxbug/article/details/7569328\\\" data-ke-src=\\\"http://blog.csdn.net/firefoxbug/article/details/7569328\\\">http://blog.csdn.net/firefoxbug/article/details/7569328</a></span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\" style=\\\"text-indent:21pt;\\\">这样的默认配置可以实现以下功能<span></span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\" style=\\\"margin-left:0cm;text-indent:21pt;\\\"><!--[if !supportLists]--><span>A.</span><!--[endif]-->可以使用<span>anonymous</span>这个匿名账户或其他实体账号登陆<span></span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\" style=\\\"margin-left:0cm;text-indent:21pt;\\\"><!--[if !supportLists]--><span>B.</span><!--[endif]--><span>Anonymous</span>用户目录在<span>/var/ftp</span>，且无上传权限，也已经被<span>chroot</span>了<span></span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\" style=\\\"margin-left:0cm;text-indent:21pt;\\\"><!--[if !supportLists]--><span>C.</span><!--[endif]-->实体账号并没有被<span>chroot</span>，可以前往任何一个目录<span></span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\" style=\\\"margin-left:0cm;text-indent:21pt;\\\"><!--[if !supportLists]--><span>D.</span><!--[endif]-->客户端有任何上传下载信息，被记录在<span>/var/log/xferlog</span>中<span></span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\" style=\\\"margin-left:0cm;text-indent:21pt;\\\"><!--[if !supportLists]--><span>E.</span><!--[endif]-->主动连接端口为<span>20</span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\" style=\\\"margin-left:0cm;text-indent:21pt;\\\"><!--[if !supportLists]--><span>F.</span><!--[endif]-->使用格林尼治时间<span></span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\"><span>&nbsp;</span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\" style=\\\"text-indent:21pt;\\\">当然我们可以根据自己的需要更改相关的配置<span></span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\" style=\\\"text-indent:21pt;\\\"><span>a.</span>匿名登陆取消<span></span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\" style=\\\"text-indent:21pt;\\\"><span>anonymous_enable=NO</span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\" style=\\\"text-indent:21pt;\\\"><span>b.</span>系统账号不能登录<span></span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\" style=\\\"text-indent:21pt;\\\"><span>userlist_enable=YES</span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\" style=\\\"text-indent:21pt;\\\"><span>userlist_deny=YES</span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\" style=\\\"text-indent:21pt;\\\"><span>userlist_file=/etc/vsftpd/user_list</span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\" style=\\\"text-indent:21pt;\\\"><span>c.</span>使用当地时间<span></span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\" style=\\\"text-indent:21pt;\\\"><span>use_localtime=YES</span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\" style=\\\"text-indent:21pt;\\\"><span>d.</span>显示欢迎信息<span></span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\" style=\\\"text-indent:21pt;\\\"><span>banner_file=/etc/vsftpd/welcome.txt</span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\" style=\\\"text-indent:21pt;\\\"><span>&nbsp;</span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\" style=\\\"text-indent:21pt;\\\">注：对于<span>b</span>项中<span>userlist_file</span>制定的文件内容为<span>UID</span>小于<span>500</span>的系统账号这个文件中的内容与<span>/etc/vsftpd/ftpusers</span>中的内容相同<span>&nbsp;&nbsp; awk\n-F: \\\'{print $1}\\\' /etc/passwd&nbsp;&nbsp;&nbsp;&nbsp; </span>命令可以打印所有的用户名<span></span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\" style=\\\"text-indent:21pt;\\\"><span>&nbsp;</span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\" style=\\\"text-indent:21pt;\\\">如果需要限制某个实体用户只能访问他自己的目录，另一个用户可以访问所有内容该怎么设置呢？<span></span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\" style=\\\"text-indent:21pt;\\\"><span>chroot_local_user=YES</span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\" style=\\\"text-indent:21pt;\\\"><span>chroot_list_enable=YES</span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\" style=\\\"text-indent:21pt;\\\"><span>chroot_list_file=/etc/vsftpd/chroot_list</span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\" style=\\\"text-indent:21pt;\\\"><span>&nbsp;</span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\" style=\\\"text-indent:21pt;\\\"><span>chroot_list_file</span>对应文件中填写不被限制的账号<span>,</span>如果该账号不在其中，那么他只能访问自己的目录。<span></span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\"><span>&nbsp;</span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\">我在访问<span>ftp</span>服务器时会遇到这种错误<span>500 OOPS: cannot change directory:/home/ming</span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>原因：<span>CentOS</span>安装了<span>SELinux</span>，默认情况下没有开启<span>FTP</span>支持，访问被阻止<span></span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>解决：<span>getsebool -a|grep ftp </span>查看<span>ftp</span>情况<span></span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ftpd_disable_trans --&gt; off&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>或者<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ftpd_home_dir --&gt; off</span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>用<span>setsebool\nftpd_disable_trans 1</span>将其开启即可，然后重启<span>ftp</span>服务器<span></span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\">同时我觉得需要说明的一点是，<span>FTP</span>账号就是系统账号，如果需要添加<span>FTP</span>账号，就需要添加<span>linux</span>系统账号 例如：添加一个名为<span>student</span>的<span>FTP</span>账号并设置密码<span></span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\"><span>useradd student</span></p><p class=\\\"MsoNormal\\\" align=\\\"left\\\"><span>passwd *****</span></p>', '1', '7', '2014-08-16');
INSERT INTO `blogs_news` VALUES ('19', 'Java 静态引入', '1', '<p>什么是静态引入？</p><p>静态引入是JDK1.5后引入的功能，可以引入一个类中的静态方法。</p><p>举例说明：</p><p>定义一个含有静态方法的类</p><p><pre class=\\\"prettyprint lang-java\\\">package com.zxmit.junit;\n\npublic class Demo1 {\n	public static void staticFun() {\n		System.out.println(\\\"static fun\\\");\n	}\n}</pre> <pre class=\\\"prettyprint lang-java\\\">在另一个类中引入Demo1的静态方法</pre><pre class=\\\"prettyprint lang-java\\\">package com.zxmit.junit.test;\n\nimport static com.zxmit.junit.Demo1.staticFun;\n\npublic class DemoTest {\n	public void fun() {\n		staticFun();\n	}\n}\n</pre> <br></p>', '1', '8', '2014-08-20');
INSERT INTO `blogs_news` VALUES ('20', '测试', '1', '修改测试', '1', '6', '2014-08-21');
INSERT INTO `blogs_news` VALUES ('21', 'Java泛型与类型擦除', '1', '<p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\" style=\\\"\\\\&quot;text-indent:21.0pt;\\\\&quot;\\\"><span>Java</span>中的泛型是<span>JDK 1.5</span>的一项新增的特性，它的本质是参数化类型的应用。参数类型用在类上的成为泛型类，用在接口上成为泛型接口，用在方法上成为泛型方法。</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\" style=\\\"\\\\&quot;text-indent:21.0pt;\\\\&quot;\\\">泛型的技术在<span>C#</span>与<span>Java</span>中看似相同，但是有本质上的区别，<span>C#</span>中<span>List</span>与<span>List</span>就是两种不同的类型，不论是在源码中，还是在编译后的中间语言中，或是运行期的<span>CLR</span>中，都是切实存在的，这种实现成为类型膨胀，基于这种方法实现的泛型称为真实泛型。</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">而<span>java</span>中就不一样了，<span>java</span>中的泛型只存在于源程序中，在编译后的字节码文件中就已经不存在了，已经被替换为原生的类型，并且在相应的地方插入强制类型转换代码，因此对于<span>ArrayList</span>与<span>ArrayList</span>来说就是一个类，所以泛型技术其实就是<span>java</span>的 “语法糖”</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">这种实现也叫做伪泛型。</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">下面为一个简单地<span>java</span>泛型例子：</p><pre class=\\\"\\\\&quot;prettyprint\\\" lang-java\\\\\\\"=\\\"\\\">public class DemoAuto {\n	public static void main(String[] args) {\n		Listlist = new ArrayList();\n		list.add(\\\\\\\"hello world\\\\\\\");\n		System.out.println(list.get(0));\n	}\n}\n</pre>\n<p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">通过DJ反编译工具将生成的Class文件反编译后生成的代码为：</p><pre class=\\\"\\\\&quot;prettyprint\\\" lang-java\\\\\\\"=\\\"\\\">public class DemoAuto\n{\n    public DemoAuto()\n    {}\n    public static void main(String args[])\n    {\n        List list = new ArrayList();\n        list.add(\\\\\\\"hello world\\\\\\\");\n        System.out.println((String)list.get(0));\n    }\n}\n</pre>\n<p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">至于当初为什么会选择类型擦除的方法来实现泛型支持呢？我感觉应该是考虑到了兼容性。</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">至此我们就了解了为什么会有<b><i>泛型擦除</i></b>这个名词的来历了。</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">正是由于泛型擦除的存在所以对于下面的代码来说不能编译通过</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\" align=\\\"\\\\&quot;left\\\\&quot;\\\"></p><pre class=\\\"\\\\&quot;prettyprint\\\" lang-java\\\\\\\"=\\\"\\\">public class DemoAuto {\n        \n         public void fun(Listlist) {\n                   System.out.println(\\\\\\\"list1\\\\\\\");\n                   return 0;\n         }\n        \n         public void fun(Listlist) {\n                   System.out.println(\\\\\\\"list1\\\\\\\");\n                   return null;\n         }\n}</pre><pre class=\\\"\\\\&quot;prettyprint\\\" lang-java\\\\\\\"=\\\"\\\"><span style=\\\"font-family: \\\'sans serif\\\', tahoma, verdana, helvetica; line-height: 1.5;\\\">这是应为List和List编译之后都被擦除了，变成了一样的原生类型List，所以这样不能重载就很好理解了，但是看看下面的代码你会有什么想法：</span></pre><pre class=\\\"\\\\&quot;prettyprint\\\" lang-java\\\\\\\"=\\\"\\\">public class DemoAuto {\n        \n         public int fun(Listlist) {\n                   System.out.println(\\\\\\\"list1\\\\\\\");\n                   return 0;\n         }\n        \n         public String fun(Listlist) {\n                   System.out.println(\\\\\\\"list2\\\\\\\");\n                   return null;\n         }\n}\n</pre>\n<p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">这段代码能够顺利的编译，并且能够成功的运行输出。我们看一下反编译后的代码：</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\" align=\\\"\\\\&quot;left\\\\&quot;\\\"></p><pre class=\\\"\\\\&quot;prettyprint\\\" lang-java\\\\\\\"=\\\"\\\">public class DemoAuto\n{\n    public DemoAuto()\n    {\n    }\n    public int fun(List list)\n    {\n        System.out.println(\\\\\\\"list1\\\\\\\");\n        return 0;\n    }\n    public String fun(List list)\n    {\n        System.out.println(\\\\\\\"list1\\\\\\\");\n        return null;\n    }\n}</pre><pre class=\\\"\\\\&quot;prettyprint\\\" lang-java\\\\\\\"=\\\"\\\"><span style=\\\"font-family: \\\'sans serif\\\', tahoma, verdana, helvetica; line-height: 1.5;\\\">我们很清楚的看到这段代码如果在编译过程中不能够编译通过，那么为什么会发生这种情况呢？</span></pre><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">我们知道方法重载需要要求不同的<b><i>方法签名</i></b>，但返回值不包括在方法签名中，所以返回值不参与重载选择，但是在Class文件格式中，只要描述符不是完全一致的两个方法就能够共存，也就是说两个方法拥有相同的方法名和特征签名，但是返回值不同，它们也是可以合法地共存于一个Class文件中的。</p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\"><br></p><p class=\\\"\\\\&quot;MsoNormal\\\\&quot;\\\">参考文献：深入理解Java虚拟机&nbsp;\nBy.周志明</p><p></p>', '1', '1', '2014-08-22');
INSERT INTO `blogs_news` VALUES ('22', '数据库索引小结', '1', '<p class=\\\"\\\\&quot;\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;MsoNormal\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\&quot;\\\\&quot;\\\"><span>mysql</span>中的主要有四种索引类型，主键（<span>PRIMARY\nKEY</span>）是我们最常见的是索引方式，其它三种是：普通索引（<span>INDEX</span>）、唯一性索引（<span>UNIQUE</span>）</p><p class=\\\"\\\\&quot;\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;MsoNormal\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\&quot;\\\\&quot;\\\"><span> </span> </p><p class=\\\"\\\\&quot;\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;MsoNormal\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\&quot;\\\\&quot;\\\">简单的区分一下这几个索引方式的区别：</p><p class=\\\"\\\\&quot;\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;MsoNormal\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\&quot;\\\\&quot;\\\">普通索引：基本的索引类型，它没有唯一性之类的限制</p><p class=\\\"\\\\&quot;\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;MsoNormal\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\&quot;\\\\&quot;\\\">唯一性索引：和普通索引基本相同，但索引列的所有值都必须唯一</p><p class=\\\"\\\\&quot;\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;MsoNormal\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\&quot;\\\\&quot;\\\">全文索引：只能在<span>VARCHAR</span>和<span>TEXT</span>类型列上的创建</p><p class=\\\"\\\\&quot;\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;MsoNormal\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\&quot;\\\\&quot;\\\"><span> </span><span style=\\\"\\\\&quot;\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;line-height:\\\\\\\\\\\\\\\\&quot;\\\\\\\\&quot;\\\\&quot;\\\" 1.5;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"=\\\"\\\\&quot;\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\&quot;\\\\&quot;\\\"> </span> </p><p class=\\\"\\\\&quot;\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;MsoNormal\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\&quot;\\\\&quot;\\\">实践出真知，先写一个索引是如何创建的</p><p class=\\\"\\\\&quot;\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;MsoNormal\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\&quot;\\\\&quot;\\\"><span>create table mytable </span> </p><p class=\\\"\\\\&quot;\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;MsoNormal\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\&quot;\\\\&quot;\\\"><span>(</span> </p><p class=\\\"\\\\&quot;\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;MsoNormal\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\&quot;\\\\&quot;\\\"><span> id&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int(11)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; primary\nkey,</span> </p><p class=\\\"\\\\&quot;\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;MsoNormal\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\&quot;\\\\&quot;\\\"><span> reference_1&nbsp;&nbsp;&nbsp;&nbsp; int(11),</span> </p><p class=\\\"\\\\&quot;\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;MsoNormal\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\&quot;\\\\&quot;\\\"><span> reference_2&nbsp;&nbsp;&nbsp;&nbsp; int(11),</span> </p><p class=\\\"\\\\&quot;\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;MsoNormal\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\&quot;\\\\&quot;\\\"><span> value&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; varchar(11)</span> </p><p class=\\\"\\\\&quot;\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;MsoNormal\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\&quot;\\\\&quot;\\\"><span>);</span> </p><p class=\\\"\\\\&quot;\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;MsoNormal\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\&quot;\\\\&quot;\\\"><span> </span> </p><p class=\\\"\\\\&quot;\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;MsoNormal\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\&quot;\\\\&quot;\\\"><span>insert into mytable values(1, 11, 101, ‘321456’);</span> </p><p class=\\\"\\\\&quot;\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;MsoNormal\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\&quot;\\\\&quot;\\\"><span>insert into mytable values(2, 12, 102, ‘147852’);</span> </p><p class=\\\"\\\\&quot;\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;MsoNormal\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\&quot;\\\\&quot;\\\"><span>insert into mytable values(3, 13, 103, ‘357841’);</span> </p><p class=\\\"\\\\&quot;\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;MsoNormal\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\&quot;\\\\&quot;\\\"><span>insert into mytable values(4, 14, 104, ‘128954’);</span> </p><p class=\\\"\\\\&quot;\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;MsoNormal\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\&quot;\\\\&quot;\\\"><span>insert into mytable values(5, 15, 105, ‘321895’);</span> </p><p class=\\\"\\\\&quot;\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;MsoNormal\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\&quot;\\\\&quot;\\\"><span> </span> </p><p class=\\\"\\\\&quot;\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;MsoNormal\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\&quot;\\\\&quot;\\\">创建数据库表并插入数据后开始查询数据</p><p class=\\\"\\\\&quot;\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;MsoNormal\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\&quot;\\\\&quot;\\\"><span>select * from mytable where reference_1=11;</span> </p><p class=\\\"\\\\&quot;\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;MsoNormal\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\&quot;\\\\&quot;\\\"><span> </span> </p><p class=\\\"\\\\&quot;\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;MsoNormal\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\&quot;\\\\&quot;\\\">根据<span>reference_1</span>创建索引</p><p class=\\\"\\\\&quot;\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;MsoNormal\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\&quot;\\\\&quot;\\\"><span>create INDEX mytable_reference_1 ON\nmytable(reference_1);</span> </p><p class=\\\"\\\\&quot;\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;MsoNormal\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\&quot;\\\\&quot;\\\"><span> </span> </p><p class=\\\"\\\\&quot;\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;MsoNormal\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\&quot;\\\\&quot;\\\">如何查看创建索引后再次查询用到了索引呢？很简单，用<span>EXPLAIN </span>关键字就可以查看</p><p class=\\\"\\\\&quot;\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;MsoNormal\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\&quot;\\\\&quot;\\\"><span>EXPLAIN &nbsp;select * from mytable where reference_1=11;</span> </p><p class=\\\"\\\\&quot;\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;MsoNormal\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\&quot;\\\\&quot;\\\"><span>+----+-------------+---------+------+---------------------+---------------------+---------+-------+------+-------+</span> </p><p class=\\\"\\\\&quot;\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;MsoNormal\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\&quot;\\\\&quot;\\\"><span>| id | select_type | table&nbsp;&nbsp; | type | possible_keys&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | key&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | key_len | ref&nbsp;&nbsp; | rows | Extra |</span> </p><p class=\\\"\\\\&quot;\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;MsoNormal\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\&quot;\\\\&quot;\\\"><span>+----+-------------+---------+------+---------------------+---------------------+---------+-------+------+-------+</span> </p><p class=\\\"\\\\&quot;\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;MsoNormal\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\&quot;\\\\&quot;\\\"><span>|&nbsp; 1\n| SIMPLE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | mytable | ref&nbsp; | mytable_reference_1 | mytable_reference_1 |\n5&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | const |&nbsp;&nbsp;&nbsp; 1 | NULL&nbsp;\n|</span> </p><p class=\\\"\\\\&quot;\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;MsoNormal\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\&quot;\\\\&quot;\\\"><span>+----+-------------+---------+------+---------------------+---------------------+---------+-------+------+-------+</span> </p><p class=\\\"\\\\&quot;\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;MsoNormal\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\&quot;\\\\&quot;\\\"><span> </span> </p><p class=\\\"\\\\&quot;\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;MsoNormal\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\&quot;\\\\&quot;\\\">对比未添加索引时的显示情况</p><p class=\\\"\\\\&quot;\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;MsoNormal\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\&quot;\\\\&quot;\\\"><span>+----+-------------+---------+------+---------------+------+---------+------+------+-------------+</span> </p><p class=\\\"\\\\&quot;\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;MsoNormal\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\&quot;\\\\&quot;\\\"><span>| id | select_type | table&nbsp;&nbsp; | type | possible_keys | key&nbsp; | key_len | ref&nbsp; | rows | Extra&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |</span> </p><p class=\\\"\\\\&quot;\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;MsoNormal\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\&quot;\\\\&quot;\\\"><span>+----+-------------+---------+------+---------------+------+---------+------+------+-------------+</span> </p><p class=\\\"\\\\&quot;\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;MsoNormal\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\&quot;\\\\&quot;\\\"><span>|&nbsp; 1\n| SIMPLE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | mytable | ALL&nbsp; | NULL&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | NULL | NULL&nbsp;&nbsp;&nbsp; | NULL |&nbsp;&nbsp;&nbsp;\n5 | Using where |</span> </p><p class=\\\"\\\\&quot;\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;MsoNormal\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\&quot;\\\\&quot;\\\"><span>+----+-------------+---------+------+---------------+------+---------+------+------+-------------+</span> </p><p class=\\\"\\\\&quot;\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;MsoNormal\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\&quot;\\\\&quot;\\\"><span> </span> </p><p class=\\\"\\\\&quot;\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;MsoNormal\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\&quot;\\\\&quot;\\\">对上面输出的两个表中字段的解释可以参见这篇文章</p><p class=\\\"\\\\&quot;\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;MsoNormal\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\&quot;\\\\&quot;\\\"><span>http://database.51cto.com/art/201108/285710_1.htm</span> </p><p class=\\\"\\\\&quot;\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;MsoNormal\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\&quot;\\\\&quot;\\\"><span> </span> </p><p class=\\\"\\\\&quot;\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;MsoNormal\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\&quot;\\\\&quot;\\\">关于索引更深层的理解，包括什么时候使用索引合适，索引的敝处，索引所用的数据结构等等，可以参考下面的文章</p><p class=\\\"\\\\&quot;\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;MsoNormal\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\&quot;\\\\&quot;\\\">http://blog.csdn.net/kennyrose/article/details/7532032 </p><p class=\\\"\\\\&quot;\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;MsoNormal\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\&quot;\\\\&quot;\\\"><span> </span> </p><p class=\\\"\\\\&quot;\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;MsoNormal\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\&quot;\\\\&quot;\\\">最后提一下相关的一个笔试题</p><p class=\\\"\\\\&quot;\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;MsoNormal\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\&quot;\\\\&quot;\\\">一个用户登陆的时候需要查询账号，如何进行优化，题目如此简单但去年今日苦思冥想不知道该怎样优化，今天看来只需要给账号创建索引就<span>OK</span>了。原因很简单，账号一般是创建后不会改变的，而且查询相当频繁，数据量相当大，自然这一点都很符合索引的优势</p>', '1', '9', '2014-09-02');
INSERT INTO `blogs_news` VALUES ('23', '表达式的前、中、后缀表达式', '1', '<p>中缀表达式：</p><p>&nbsp; &nbsp; &nbsp;是通用的数学表达式的用法，使用时需要右括号来区别优先级的问题，但这种记法对程序来说不是很易解析，而对于前缀（后缀）表达式则更容易程序的解析，比如 5-（2+3）就是简单的中缀表示法</p><p>前缀表达式：</p><p>&nbsp; &nbsp; &nbsp;该表达式不存在括号，并且将运算符号放在需要操作数的前面对于5-（2+3）的前缀表达式为 -5+2 3，计算机程序解析时从后往前解析：先记录数据3,2，当遇到操作符 + 时将2与3相加得到结果5，此时得到的表达式为 + 5 5，然后从右到左做同样的操作得到结果0<br></p><p>后缀表达式：</p><p>&nbsp; &nbsp; &nbsp;与前缀表达式类似没有括号，5-（2+3）后缀表达式为5 2 3 + -， 解析过程为 5 2 3+ - &nbsp; &gt;&gt; &nbsp;5 5 - &nbsp; &gt;&gt; 0</p>', '1', '2', '2014-10-09');

-- ----------------------------
-- Table structure for blogs_note
-- ----------------------------
DROP TABLE IF EXISTS `blogs_note`;
CREATE TABLE `blogs_note` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `note` text,
  `nid` int(11) DEFAULT NULL,
  `name` varchar(32) DEFAULT NULL,
  `email` varchar(32) DEFAULT NULL,
  `fnote` text,
  `time` date DEFAULT NULL,
  `ftime` date DEFAULT NULL,
  `fname` varchar(32) DEFAULT NULL,
  `state` tinyint(4) DEFAULT '0',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of blogs_note
-- ----------------------------
INSERT INTO `blogs_note` VALUES ('1', '今天我上街，看见一东东，上面的痘痘数也数不清', '3', 'psxt', '1093776496@qq.com', null, '2014-03-02', null, null, '2');
INSERT INTO `blogs_note` VALUES ('2', '输液泵，打吊瓶', '3', 'psxt', 'little_ming001@163.com', 'fdfff', '2014-03-03', '2014-03-04', 'vffv', '2');
INSERT INTO `blogs_note` VALUES ('3', '差点迟到', '3', 'z1093776496', 'little_ming001@qq.com', null, '2014-03-04', null, null, '2');
INSERT INTO `blogs_note` VALUES ('4', 'sss', '3', 'psxt', '2014-03-04', null, null, null, null, '2');
INSERT INTO `blogs_note` VALUES ('5', '', null, null, null, null, '2014-08-20', null, null, '0');
INSERT INTO `blogs_note` VALUES ('6', '', null, null, null, null, '2014-08-23', null, null, '0');
INSERT INTO `blogs_note` VALUES ('7', '不错哦', '18', '小明', '10933@qq.com', null, '2014-09-27', null, null, '1');

-- ----------------------------
-- Table structure for blogs_notice
-- ----------------------------
DROP TABLE IF EXISTS `blogs_notice`;
CREATE TABLE `blogs_notice` (
  `id` int(11) NOT NULL DEFAULT '0',
  `content` varchar(255) CHARACTER SET utf8 DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- ----------------------------
-- Records of blogs_notice
-- ----------------------------
INSERT INTO `blogs_notice` VALUES ('0', '欢迎大家进入系统');

-- ----------------------------
-- Table structure for blogs_type
-- ----------------------------
DROP TABLE IF EXISTS `blogs_type`;
CREATE TABLE `blogs_type` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `type` varchar(60) DEFAULT NULL,
  `state` tinyint(4) DEFAULT '1',
  `position` smallint(6) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of blogs_type
-- ----------------------------
INSERT INTO `blogs_type` VALUES ('1', 'Java基础知识', '1', '2');
INSERT INTO `blogs_type` VALUES ('2', '数据结构及算法总结', '1', '3');
INSERT INTO `blogs_type` VALUES ('3', 'SSH框架总结', '1', '1');
INSERT INTO `blogs_type` VALUES ('5', '杂项', '1', '4');
INSERT INTO `blogs_type` VALUES ('6', '生活点滴', '1', '5');
INSERT INTO `blogs_type` VALUES ('7', 'Linux服务配置及学习', '1', '6');
INSERT INTO `blogs_type` VALUES ('8', '笔记备忘录', '1', '7');
INSERT INTO `blogs_type` VALUES ('9', '数据库', '1', '8');
